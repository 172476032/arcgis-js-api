// COPYRIGHT Â© 2017 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.2/esri/copyright.txt for details.

define(["require","exports","../../../../../core/tsSupport/extendsHelper","../../../lib/glMatrix","../../util","./PinchNavigationBase","./MomentumNavigationGlobal"],function(t,e,a,i,n,r,o){var s;!function(t){t[t.Horizontal=0]="Horizontal",t[t.Vertical=1]="Vertical"}(s=e.PanMode||(e.PanMode={}));var h=i.vec3d.create(),c={ELEVATION_THRESHOLD:3e4,ANGLE_THRESHOLD:16/180*Math.PI},l=function(t){function e(e,a){var r=t.call(this,e,a)||this;return r.view=e,r._rotation={axis:i.vec3d.create(),valueSmooth:new n.ExponentialFalloff(.05)},r._panning={axis:i.vec3d.create(),plane:{distance:0,normal:i.vec3d.create()},planarCenterScene:i.vec3d.create()},r._scaling={valueSmooth:new n.ExponentialFalloff(.05),centerScreen:i.vec2.create()},r._beginScenePoints={points:[],center:i.vec3d.create()},r._panMode=s.Horizontal,r._navigationSphereRadius=0,r._tmpN=i.vec3d.create(),r._tmp2d=i.vec2.create(),r._tmpPickPointScreen=i.vec2.create(),r._tmpPickPointScene=i.vec3d.create(),r._tmpCurrentPoints=[],r._tmpCurrentCenter=i.vec3d.create(),r._tmpD=i.vec3d.create(),r._momentumNavigation=new o.MomentumNavigationGlobal(r,a),r}return a(e,t),Object.defineProperty(e.prototype,"momentum",{get:function(){return this._momentumNavigation},enumerable:!0,configurable:!0}),e.prototype.onNavigationBegin=function(t){var e=this._tmpPickPointScreen,a=this._tmpPickPointScene,n=this._helper;this._rotation.valueSmooth.reset(),this._scaling.valueSmooth.reset(),i.vec2.set2(t.data.currentState.center.x,this.view.height-t.data.currentState.center.y,e),n.picker.pickPointInScreen(e,a)?this._navigationSphereRadius=i.vec3d.length(a):this._navigationSphereRadius=Math.max(i.vec3d.length(this.beginCamera.center),.9*n.earthUtils.earthRadius),this._panMode=s.Horizontal;var r=this.view.renderCoordsHelper.getAltitude(this.beginCamera.eye);if(r<c.ELEVATION_THRESHOLD)if(this._navigationSphereRadius>i.vec3d.length(this.beginCamera.eye))this._panMode=s.Vertical;else{i.vec3d.normalize(i.vec3d.subtract(this.beginCamera.eye,a,this._tmpN));var o=Math.abs(.5*Math.PI-Math.acos(i.vec3d.dot(a,this._tmpN)/i.vec3d.length(a)));o<c.ANGLE_THRESHOLD&&(this._panMode=s.Vertical)}this._computeSpherePoints(t,"startEvent",this._navigationSphereRadius,this.beginCamera,this._beginScenePoints.points),n.spherical.computePointCenter(this._beginScenePoints.points,this._navigationSphereRadius,this._beginScenePoints.center),this._panMode===s.Vertical&&(i.vec3d.normalize(i.vec3d.subtract(this.beginCamera.eye,this.beginCamera.center,this._panning.plane.normal)),this._panning.plane.distance=i.vec3d.dot(a,this._panning.plane.normal),i.vec2.set2(t.data.currentState.center.x,this.view.height-t.data.currentState.center.y,this._tmp2d),this._helper.planar.intersectPlaneFromScreenPoint(this._panning.plane,this.beginCamera,this._tmp2d,this._panning.planarCenterScene))},e.prototype.onNavigationUpdate=function(t,e){var a=this._helper,n=t.data.pointers.length,r=n>1;if(this._panMode===s.Horizontal){var o=this._navigationSphereRadius;if(r){var c=t.data.startState.radius/t.data.currentState.radius,l=.001875*Math.min(Math.max(t.data.currentState.radius,40),120);this._scaling.valueSmooth.gain=l,this._scaling.valueSmooth.update(c),a.spherical.applyZoom(o,this.view,e,this._scaling.valueSmooth.value),i.vec2.set2(t.data.currentState.center.x,this.view.height-t.data.currentState.center.y,this._scaling.centerScreen),this.momentum.addScaleValue(this._scaling.valueSmooth.value)}var u=this._tmpCurrentPoints,p=this._tmpCurrentCenter;this._computeSpherePoints(t,"currentEvent",o,e,u),a.spherical.computePointCenter(u,o,p);var m=this._panning.axis,v=a.spherical.rotationFromPoints(o,this._beginScenePoints.center,p,m);a.applyRotation(e,h,m,v);var d=this._tmp2d;if(i.vec2.set2(t.data.currentState.center.x,this.view.height-t.data.currentState.center.y,d),this.momentum.addPanValue(d,p,m),r){var _=this._rotation.axis,u=this._tmpCurrentPoints,g=h;i.vec3d.normalize(this._beginScenePoints.center,_),this._computeSpherePoints(t,"currentEvent",o,e,u);var S=0;if(2===n)S=a.rotationFromPointsAroundAxis(u[0],this._beginScenePoints.points[0],_);else{for(var P=0;n>P;P++)S+=a.rotationFromPointsAroundAxis(u[P],this._beginScenePoints.points[P],_);S/=n}var b=this._rotation.valueSmooth.value,C=S-b;C=a.normalizeRotationDelta(C),S=b+C;var l=.00125*Math.min(Math.max(t.data.currentState.radius,40),120);this._rotation.valueSmooth.gain=l,this._rotation.valueSmooth.update(S);var f=this._rotation.valueSmooth.value;this.momentum.addRotationValue(f),a.applyRotation(e,g,_,f)}}else{var M=this._panning.plane;if(r){var c=t.data.startState.radius/t.data.currentState.radius,l=.001875*Math.min(Math.max(t.data.currentState.radius,40),120);this._scaling.valueSmooth.gain=l,this._scaling.valueSmooth.update(c),this.momentum.addScaleValue(this._scaling.valueSmooth.value),this.momentum.setVerticalParameters(M,this._panning.planarCenterScene),a.planar.applyZoom(M,this.view,e,this._panning.planarCenterScene,this._scaling.valueSmooth.value)}var u=this._tmpCurrentPoints,p=this._tmpCurrentCenter;this.computePlanePoints(t,"currentEvent",M,e,u),a.planar.computePointCenter(u,p);var y=this._tmpD;i.vec3d.subtract(p,this._panning.planarCenterScene,y),i.vec3d.subtract(e.eye,y),i.vec3d.subtract(e.center,y),e.markViewDirty();var d=this._tmp2d;if(i.vec2.set2(t.data.currentState.center.x,this.view.height-t.data.currentState.center.y,d),this.momentum.addPanValue(d,p,y),r){var _=this._rotation.axis;i.vec3d.set(this._beginScenePoints.center,_);var S=t.data.currentState.angle,b=this._rotation.valueSmooth.value,C=S-b;C=a.normalizeRotationDelta(C),S=b+C;var l=.00125*Math.min(Math.max(t.data.currentState.radius,40),120);this._rotation.valueSmooth.gain=l,this._rotation.valueSmooth.update(S);var f=this._rotation.valueSmooth.value;this.momentum.addRotationValue(f),a.applyRotation(e,h,_,f)}}e.markViewDirty()},e.prototype.onNavigationEnd=function(t){this.momentum.setParameters(this._navigationSphereRadius,this._scaling.centerScreen,this._beginScenePoints.center,this._panMode)},e.prototype._computeSpherePoints=function(t,e,a,n,r){r.length=t.data.pointers.length;for(var o=this._tmp2d,s=0;s<r.length;s++){var h=t.data.pointers[s];o[0]=h[e].x,o[1]=this.view.height-h[e].y,void 0===r[s]&&(r[s]=i.vec3d.create()),this._helper.spherical.makeRenderCoordSpherePoint(a,n,o,r[s])}return r},e}(r.PinchNavigationBase);e.PinchNavigationGlobal=l});