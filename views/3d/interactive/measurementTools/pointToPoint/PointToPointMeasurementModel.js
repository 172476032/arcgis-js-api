// COPYRIGHT Â© 2017 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.6/esri/copyright.txt for details.

define(["require","exports","../../../../../core/tsSupport/declareExtendsHelper","../../../../../core/tsSupport/decorateHelper","../../../../../core/Accessor","../../../../../core/accessorSupport/decorators","../../../../../core/HandleRegistry","../../../../../core/Collection","../../../../../core/watchUtils","../../../../../geometry/support/geodesicUtils","../../../lib/glMatrix","../../../support/earthUtils","../../../support/projectionUtils","../../../support/mathUtils","../../../webgl-engine/lib/Util","../support/UnitNormalizer","../support/Quantity","../support/quantityUtils","../support/unitUtils"],function(e,t,i,r,n,o,a,s,c,l,u,d,p,h,m,g,f,y,v){var P=u.vec3d,b=d.earthRadius*Math.PI/180,D=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t._tempStartPosition=P.create(),t._tempEndPosition=P.create(),t._tempCornerPosition=P.create(),t._unitNormalizer=new g,t._handles=new a,t.cursorPoint=null,t.hoveredHandle=null,t.draggedHandles=new s,t.state="initial",t.mode="auto",t.unit="metric",t.directDistance=null,t.horizontalDistance=null,t.verticalDistance=null,t.geodesicDistance=null,t.geodesicAngle=null,t.triangleCollapseRatioThreshold=.03,t.geodesicMeasurementDistanceThreshold=1e5,t}return i(t,e),t.prototype.initialize=function(){var e=this;this._handles.add(c.init(this.sceneView,"spatialReference",function(t){e._unitNormalizer.spatialReference=t}),"scene-view"),this.reset()},t.prototype.destroy=function(){this._handles.destroy(),this._handles=null},Object.defineProperty(t.prototype,"startPoint",{set:function(e){this._set("startPoint",e),this._updateMeasurement()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"startPointSurfaceLocation",{set:function(e){this._set("startPointSurfaceLocation",e),this._updateMeasurement()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endPoint",{set:function(e){this._set("endPoint",e),this._updateMeasurement()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"endPointSurfaceLocation",{set:function(e){this._set("endPointSurfaceLocation",e),this._updateMeasurement()},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"measurementSurfaceLocation",{get:function(){var e=this.startPointSurfaceLocation,t=this.endPointSurfaceLocation;return null==e||null==t?"camera-dependent":"above-the-surface"===e&&"below-the-surface"===t||"below-the-surface"===e&&"above-the-surface"===t||"on-the-surface"===e&&"on-the-surface"===t?"camera-dependent":"above-the-surface"===e||"above-the-surface"===t?"above-the-surface":"below-the-surface"},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"validMeasurement",{get:function(){return!!this.startPoint&&!!this.endPoint},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"isMeasuring",{get:function(){return!!this.startPoint},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"geodesicDistanceExceeded",{get:function(){return this.horizontalDistance&&this.horizontalDistance.value>this.geodesicMeasurementDistanceThreshold},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"measurementMode",{get:function(){var e=this.mode;return"auto"===e&&(e="euclidean",("degrees"===this.unit||"degrees-minutes-seconds"===this.unit)&&(e="geodesic"),this.geodesicDistanceExceeded&&(e="geodesic")),e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"triangleView",{get:function(){var e=this._collapseTriangle(),t=null,i=null,r=null,n="geodesic"===this.measurementMode,o=this.directDistance,a=n?this.geodesicDistance:this.horizontalDistance,s=this.verticalDistance,c=null;switch(this.unit){case"metric":t=o&&y.formatMetricLength(o),i=a&&y.formatMetricLength(a),r=s&&y.formatMetricVerticalLength(s),c=o&&o.toUnit("meters");break;case"imperial":t=o&&y.formatImperialLength(o),i=a&&y.formatImperialLength(a),r=s&&y.formatImperialVerticalLength(s),c=o&&o.toUnit(v.preferredImperialLengthUnit(o.value,o.unit));break;case"degrees":i=this.geodesicAngle&&y.formatDecimal(this.geodesicAngle,"degrees"),c=this.geodesicAngle&&this.geodesicAngle.toUnit("degrees");break;case"degrees-minutes-seconds":i=this.geodesicAngle&&y.formatDMS(this.geodesicAngle),c=this.geodesicAngle&&this.geodesicAngle.toUnit("degrees");break;default:t=o&&y.formatDecimal(o,this.unit),i=a&&y.formatDecimal(a,this.unit),r=s&&y.formatDecimal(s,this.unit),c=o&&o.toUnit(this.unit)}var l=1;if(c){l=m.nextHighestPowerOfTen(c.value/30);var u=this.sceneView.spatialReference;l*="degrees"===c.unit?b:v.convertUnit(1,c.unit,"meters"),u.isWGS84||u.isWebMercator||(l/=this._unitNormalizer.normalizeDistance(1))}return{visible:this.validMeasurement&&!this.startPoint.equals(this.endPoint),mode:this.measurementMode,collapsed:e,directLabel:t,horizontalLabel:i,verticalLabel:r,stripeLength:l}},enumerable:!0,configurable:!0}),t.prototype.reset=function(){this.clearMeasurement()},t.prototype.clearMeasurement=function(){this.state="initial",this.startPoint=null,this.endPoint=null,this.cursorPoint=null,this._clearOverride("measurementSurfaceLocation"),this._updateMeasurement()},t.prototype.finishedMeasurement=function(e){if(!this._isOverridden("measurementSurfaceLocation")){var t=this.measurementSurfaceLocation,i="camera-dependent"===t?e.cameraAboveGround?"above-the-surface":"below-the-surface":t;this._override("measurementSurfaceLocation",i)}this.state="measured"},t.prototype._collapseTriangle=function(){if(!this.validMeasurement||this.startPoint.equals(this.endPoint))return!0;if("geodesic"===this.measurementMode)return!0;var e=Math.min(this.verticalDistance.value/this.horizontalDistance.value,this.horizontalDistance.value/this.verticalDistance.value);return e<this.triangleCollapseRatioThreshold},t.prototype._exactGeodesicDistanceAndAngle=function(e,t){var i=h.deg2rad(e.longitude),r=h.deg2rad(e.latitude),n=h.deg2rad(t.longitude),o=h.deg2rad(t.latitude),a=Math.abs(n-i),s=Math.acos(Math.sin(r)*Math.sin(o)+Math.cos(r)*Math.cos(o)*Math.cos(a)),c=h.rad2deg(s),u=l.inverseGeodeticSolver(r,i,o,n).geodesicDistance;return{distance:new f(u,"meters"),angle:new f(c,"degrees")}},t.prototype._approximateGeodesicDistanceAndAngle=function(e){return{distance:new f(e,"meters"),angle:new f(e/b,"degrees")}},t.prototype._euclideanDistances=function(e,t){e.z>t.z&&(e=[e,e=t][0]);var i=e.clone();i.z=t.z;var r=this._tempStartPosition,n=this._tempEndPosition,o=this._tempCornerPosition,a=this.sceneView.spatialReference,s=a.isWGS84||a.isWebMercator?p.WGS84ECEFSpatialReference:a;p.pointToVector(e,r,s),p.pointToVector(t,n,s),p.pointToVector(i,o,s);var c=P.dist(r,n),l=P.dist(o,n),u=Math.abs(t.z-e.z);return a.isWGS84||a.isWebMercator||(c=this._unitNormalizer.normalizeDistance(c),l=this._unitNormalizer.normalizeDistance(l)),u=this._unitNormalizer.normalizeElevation(u),{direct:new f(c,"meters"),horizontal:new f(l,"meters"),vertical:new f(u,"meters")}},t.prototype._updateMeasurement=function(){if(!this.startPoint||!this.endPoint)return this._set("directDistance",null),this._set("horizontalDistance",null),this._set("verticalDistance",null),this._set("geodesicDistance",null),void this._set("geodesicAngle",null);var e=this._euclideanDistances(this.startPoint,this.endPoint),t=this.sceneView.spatialReference,i=t.isWGS84||t.isWebMercator?this._exactGeodesicDistanceAndAngle(this.startPoint,this.endPoint):this._approximateGeodesicDistanceAndAngle(e.horizontal.value);this._set("directDistance",e.direct),this._set("horizontalDistance",e.horizontal),this._set("verticalDistance",e.vertical),this._set("geodesicDistance",i.distance),this._set("geodesicAngle",i.angle)},r([o.property({constructOnly:!0})],t.prototype,"sceneView",void 0),r([o.property({value:null})],t.prototype,"startPoint",null),r([o.property({value:null})],t.prototype,"startPointSurfaceLocation",null),r([o.property({value:null})],t.prototype,"endPoint",null),r([o.property({value:null})],t.prototype,"endPointSurfaceLocation",null),r([o.property({dependsOn:["startPointSurfaceLocation","endPointSurfaceLocation"]})],t.prototype,"measurementSurfaceLocation",null),r([o.property()],t.prototype,"cursorPoint",void 0),r([o.property()],t.prototype,"hoveredHandle",void 0),r([o.property({readOnly:!0})],t.prototype,"draggedHandles",void 0),r([o.property()],t.prototype,"state",void 0),r([o.property()],t.prototype,"mode",void 0),r([o.property()],t.prototype,"unit",void 0),r([o.property({readOnly:!0,dependsOn:["startPoint","endPoint"]})],t.prototype,"validMeasurement",null),r([o.property({readOnly:!0,dependsOn:["startPoint"]})],t.prototype,"isMeasuring",null),r([o.property({readOnly:!0})],t.prototype,"directDistance",void 0),r([o.property({readOnly:!0})],t.prototype,"horizontalDistance",void 0),r([o.property({readOnly:!0})],t.prototype,"verticalDistance",void 0),r([o.property({readOnly:!0})],t.prototype,"geodesicDistance",void 0),r([o.property({readOnly:!0})],t.prototype,"geodesicAngle",void 0),r([o.property({readOnly:!0,dependsOn:["horizontalDistance","geodesicMeasurementDistanceThreshold"]})],t.prototype,"geodesicDistanceExceeded",null),r([o.property({readOnly:!0,dependsOn:["horizontalDistance","unit","geodesicDistanceExceeded"]})],t.prototype,"measurementMode",null),r([o.property({readOnly:!0,dependsOn:["unit","measurementMode","startPoint","endPoint","triangleCollapseRatioThreshold"]})],t.prototype,"triangleView",null),r([o.property()],t.prototype,"triangleCollapseRatioThreshold",void 0),r([o.property()],t.prototype,"geodesicMeasurementDistanceThreshold",void 0),t=r([o.subclass("esri.views.3d.interactive.measurementTools.pointToPoint.PointToPointMeasurementModel")],t)}(o.declared(n));return D});