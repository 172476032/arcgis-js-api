// COPYRIGHT Â© 2017 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.5/esri/copyright.txt for details.

define(["require","exports","dojo/_base/lang","dojo/Deferred","dojo/promise/all","dojo/errors/CancelError","../../webgl-engine/lib/Util","./I3SUtil","./I3SBinaryReader","../../../../core/promiseUtils","../../../../core/urlUtils"],function(e,t,r,a,n,i,o,u,s,l,d){var f=function(){function e(t,r,a,n,i,o){this.useCompressedTextures=r,this.logger=a,this.defaultGeometrySchema=n,this.requiredAttributes=i,this.bypassFeatureData=o,this.loadShared=function(t){if(null==t.sharedResource)return l.resolve({});var r=d.makeAbsolute(t.sharedResource.href,t.baseUrl)+"/";return this.loadJSON(r).then(function(t){return e.fixTextureEncodings(t),e.addAbsoluteHrefTexture(t,r),t})},this.loader=t,this.cancelled=!1}return e.prototype.cancel=function(){this.cancelled=!0},e.prototype.loadJSON=function(e){var t=this.loader.request(e,"json"),r=new a;return t.then(function(e,t){r.resolve(t)},function(t){r.reject(new Error("Failed to load: "+e))}),r.promise},e.prototype.loadBinary=function(e){var t=this.loader.request(e,"binary"),r=new a;return t.then(function(e,t){r.resolve(t)},function(t){r.reject(new Error("Failed to load: "+e))}),r.promise},e.prototype.loadImage=function(e){var t=this.loader.request(e,"image"),r=new a;return t.then(function(e,t){r.resolve(t)},function(t){r.reject(new Error("Failed to load: "+e))}),r.promise},e.prototype.loadAttribute=function(e,t,r){var a=u.addTrailingSlash(d.makeAbsolute(r,e));return this.loadBinary(a).then(function(e){return s.readBinaryAttribute(t,e)})},e.prototype.loadAttributes=function(e,t,r){var a=this,i=r.map(function(r){return null==e.attributeData||null==e.attributeData[r.index]?(a.logger.error("Missing attributeData for '"+r.name+"' on node '"+e.id+"'"),l.resolve(null)):a.loadAttribute(t,r.attributeStorageInfo,e.attributeData[r.index].href).otherwise(function(t){return a.logger.error("Failed to load attributeData for '"+r.name+"' on node '"+e.id+"'"),null})});return n(i).then(function(e){for(var t={},a=0;a<r.length;++a)e[a]&&(t[r[a].name]=e[a]);return t})},e.prototype.prepareBinaryGeometryData=function(e,t,a,n){var i=e.geometries[0];if(r.mixin(i.params,a),e.faceRanges=[[0,a.header.fields.vertexCount/3-1]],n||null!=a.vertexAttributes.region||delete a.vertexAttributes.region,null!=a.featureAttributes){var o=a.featureAttributes;if(o.faceRange){e.faceRanges=[];for(var l=s.createTypedView(t,o.faceRange),d=o.faceRange.valuesPerElement,f=a.header.fields.featureCount,c=0;f>c;c++)e.faceRanges[c]=[l[c*d],l[c*d+1]];e.componentOffsets=u.convertFlatRangesToOffsets(l,f,d)}if(o.id){e.featureIds=[];var h=1,g=s.valueType2TypedArrayClassMap[o.id.valueType];"UInt64"===o.id.valueType&&(g=Uint32Array,h=2);for(var m=new g(t,o.id.byteOffset,o.id.count*o.id.valuesPerElement*h),c=0;c<a.header.fields.featureCount;c++)if(e.featureIds[c]=m[c*o.id.valuesPerElement*h],2===h){var p=m[c*o.id.valuesPerElement*h+1];if(p>=2097150)throw new Error("ID exceeded maximum range supported by javascript (max = 53bit-1 = 9007199254740991)");e.featureIds[c]+=4294967296*p}}}},e.prototype.loadBundleData=function(e,t){var r=this,a=e.baseUrl,i={},o=this.loadShared(e),u=null;null!=this.requiredAttributes&&(u=this.loadAttributes(e,a,this.requiredAttributes));var f=null;if(null!=e.geometryData){var c=e.geometryData[t],h=d.makeAbsolute(c.href,a);c.hrefConcat=h,f=this.loadBinary(h)}return o.then(function(a){r.handleCancelled();var o=r.bypassFeatureData?l.resolve(null):r.loadFeatureData(e,t);return o.then(function(o){r.handleCancelled();var d,c=r.bypassFeatureData?r.meshPyramidGeometryData(e,a):r.collectGeometries(e,o,a);d=null!=f?f.then(function(n){i[e.geometryData[t].hrefConcat]=n;var o=Object.keys(a.materialDefinitions)[0],u=a.materialDefinitions[o].params.vertexRegions,l=s.createGeometryDataIndex(n,r.defaultGeometrySchema,u);return r.prepareBinaryGeometryData(c[0],n,l,u),c}):l.resolve(c);var h=r.loadTextures(c,a).then(function(e){for(var t={},r=0,a=e;r<a.length;r++){var n=a[r],i=n.i3sTexId;t[i]={i3sTexId:i,data:n.data,encoding:n.encoding}}return t});return n([h,d,u])}).then(function(e){var t=e[0],n=e[1],o=e[2];r.handleCancelled();var u=null;return o&&(u={attributeData:o,loadedAttributes:r.requiredAttributes}),{allGeometryData:n,attributeDataInfo:u,geometryBuffers:i,sharedResource:a,preloadedDomImages:t}})})},e.addAbsoluteHrefTexture=function(e,t){var r=e.textureDefinitions;if(null!=r)for(var a=0,n=Object.keys(r);a<n.length;a++)for(var i=n[a],o=0,u=r[i].images;o<u.length;o++){var s=u[o];Array.isArray(s.href)?s.hrefConcat=s.href.map(function(e){return d.makeAbsolute(e,t)}):s.hrefConcat=d.makeAbsolute(s.href,t)}},e.fixTextureEncodings=function(e){var t=e.textureDefinitions;if(null!=t)for(var r in t){var a=t[r];if(Array.isArray(a.encoding))for(var n=0;n<a.encoding.length;n++){var i=a.encoding[n];"data:"===i.substring(0,5)&&(a.encoding[n]=i.substring(5))}else{var i=a.encoding;"data:"===i.substring(0,5)&&(a.encoding=i.substring(5))}}},e.prototype.loadTexture=function(e,t,r){var a=this;return r===u.DDS_ENCODING_STRING?this.loadBinary(e).then(function(e){return a.handleCancelled(),{i3sTexId:t,data:e,encoding:r}}):this.loadImage(e).then(function(e){return a.handleCancelled(),{i3sTexId:t,data:e,encoding:r}})},e.prototype.loadTextures=function(e,t){for(var r=[],a=0;a<e.length;a++){var i=e[a].geometries;if(null!=i)for(var s=0,l=i;s<l.length;s++){var d=l[s],f=d.params.textureID||"none";if("none"!==f){(null==t.textureDefinitions||null==t.textureDefinitions[f])&&this.logger.warn("textureDefinitions missing in shared resource. i3sTexId: "+f);var c=t.textureDefinitions[f];if(o.assert(void 0!==c,"geometry wants unknown texture "+f),0===c.images.length)continue;var h=c.images.length-1,g=c.images[h],m=u.getAppropriateTextureEncoding(c.encoding,this.useCompressedTextures),p=m>-1?c.encoding[m]:c.encoding,v=m>-1?g.hrefConcat[m]:g.hrefConcat,y=this.loadTexture(v,f,p);r.push(y)}}}return n(r)},e.prototype.meshPyramidGeometryData=function(e,t){var r=t.materialDefinitions?Object.keys(t.materialDefinitions)[0]:null,a=t.textureDefinitions?Object.keys(t.textureDefinitions)[0]:null;return[{featureIds:[],geometries:[{type:"ArrayBufferView",params:{materialID:r,textureID:a}}],featureDataPosition:[0,0,0]}]},e.prototype.collectGeometries=function(e,t,r){for(var a=[],n=0,i=t.featureData;n<i.length;n++){var o=i[n],u=o.geometries;if(null!=u)for(var s=0;s<u.length;s++){var l=o.geometries[s];a.push({featureIds:[o.id],featureDataPosition:o.position,geometries:[l],faceRanges:[l.params.faceRange]})}else null!=o.position&&a.push({featureIds:[o.id],featureDataPosition:o.position,geometries:null})}return a},e.prototype.loadFeatureData=function(e,t){var r=d.makeAbsolute(e.featureData[t].href,e.baseUrl);return this.loadJSON(r)},e.prototype.handleCancelled=function(){if(this.cancelled)throw new i},e}();return f});