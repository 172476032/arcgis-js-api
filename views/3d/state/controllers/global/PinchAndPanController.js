// COPYRIGHT Â© 2017 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.6/esri/copyright.txt for details.

define(["require","exports","../../../../../core/tsSupport/extendsHelper","../../../lib/glMatrix","../../../input/util","../../../webgl-engine/lib/Camera","../InteractiveController","./MomentumController","../../utils/navigationUtils","../../utils/navigationUtils","../../../camera/constraintUtils"],function(t,e,n,i,r,o,a,s,c,h,p){Object.defineProperty(e,"__esModule",{value:!0});var l=function(t){function e(e,n){var a=t.call(this)||this;return a.view=e,a.pickingHelper=n,a.smoothRotation=new r.ExponentialFalloff(.05),a.rotationAxis=i.vec3d.create(),a.panningCenterScene=i.vec3d.create(),a.panningPlane={normal:i.vec3d.create(),d:0},a.smoothScaling=new r.ExponentialFalloff(.05),a.zoomCenterScreen=i.vec2d.create(),a.beginScenePoints={points:[],center:i.vec3d.create()},a.adjustedSphere={center:i.vec3d.create(),radius:0},a.panMode=h.PanMode.Horizontal,a.tmp2d=i.vec2d.create(),a.tmp3d=i.vec3d.create(),a.tmpInteractionDirection=i.vec3d.create(),a.beginScreenPoint=i.vec2d.create(),a.screenPickPoint=i.vec2d.create(),a.currentPoints=[],a.currentCenter=i.vec3d.create(),a.constraintOptions={selection:15,interactionType:0,interactionFactor:0,interactionStartCamera:new o,interactionDirection:null},a.momentumController=new s.MomentumController(e),a}return n(e,t),e.prototype.begin=function(t,e,n){if(this.active){this.beginRadius=e.radius,c.navPointToScreenPoint(this.currentCamera,e.center,this.screenPickPoint),i.vec2d.set(this.screenPickPoint,this.beginScreenPoint);var r=c.pickPointAndInitSphere(this.pickingHelper,this.beginCamera,this.screenPickPoint,!0);if(this.scenePickPoint=r.scenePickPoint,this.sphere=r.sphere,this.panMode=c.decidePanMode(this.beginCamera,this.sphere,this.scenePickPoint),this.panMode===h.PanMode.Horizontal)this.computeSpherePoints(t,"startEvent",this.sphere,this.beginCamera,this.beginScenePoints.points),c.centroidOnSphere(this.sphere.radius,this.beginScenePoints.points,this.beginScenePoints.center);else{i.vec3d.set(this.beginCamera.viewForward,this.panningPlane.normal),i.vec3d.normalize(this.panningPlane.normal),i.vec3d.negate(this.panningPlane.normal),c.setPlane(this.scenePickPoint,this.panningPlane.normal,this.panningPlane);var o=i.vec3d.create();i.vec3d.set3(this.screenPickPoint[0],this.currentCamera.height,0,o);var a=i.vec3d.create(),s=i.vec3d.length(this.beginCamera.eye);this.adjustedSphere.radius=s<this.sphere.radius?s-100:this.sphere.radius,c.sphereOrSilhouettePointFromScreenPoint(this.adjustedSphere,this.beginCamera,o,a),this.beginCamera.projectPoint(a,o);var p=.9*o[1];this.screenPickPoint[1]=Math.min(this.screenPickPoint[1],p),this.pickingHelper.pickPointInScreen(this.screenPickPoint,this.scenePickPoint)&&c.setPlane(this.scenePickPoint,this.panningPlane.normal,this.panningPlane),c.navPointToScreenPoint(this.currentCamera,e.center,this.tmp2d),c.intersectPlaneFromScreenPoint(this.panningPlane,this.beginCamera,this.tmp2d,this.panningCenterScene)}this.constraintOptions.interactionStartCamera.copyFrom(this.beginCamera)}},e.prototype.update=function(t,e,n){if(this.active){this.currentCamera.copyFrom(this.beginCamera);var i=t.length,r=i>1;this.panMode===h.PanMode.Horizontal?(r&&this.zoomSpherical(e,n),this.panningSpherical(t,e,n),r&&this.rotateSpherical(t,e,n)):(r&&this.zoomPlanar(t,e,n),this.panningPlanar(t,e,n),r&&this.rotatePlanar(t,e,n)),this.currentCamera.markViewDirty()}},e.prototype.end=function(){return this.panMode===h.PanMode.Horizontal?this.momentumController.setParameters(this.sphere.radius,this.panMode,this.zoomCenterScreen,this.beginScenePoints.center):this.momentumController.setParameters(this.sphere.radius,this.panMode,this.zoomCenterScreen,this.panningCenterScene),this.finishController(),this.momentumController.initiate()?this.momentumController:null},e.prototype.computeSpherePoints=function(t,e,n,r,o){o.length=t.length;for(var a=this.tmp2d,s=0;s<o.length;s++){var h=t[s];c.navPointToScreenPoint(r,h[e],a),void 0===o[s]&&(o[s]=i.vec3d.create()),c.sphereOrSilhouettePointFromScreenPoint(n,r,a,o[s])}return o},e.prototype.zoomSpherical=function(t,e){var n=this.currentCamera.height,r=this.beginRadius/t.radius,o=.001875*Math.min(Math.max(t.radius,40),120);this.smoothScaling.gain=o,this.smoothScaling.update(r),c.applyZoomOnSphere(this.sphere,this.currentCamera,this.smoothScaling.value),i.vec2d.set2(t.center.x,n-t.center.y,this.zoomCenterScreen),this.momentumController.addScaleValue(e,this.smoothScaling.value),this.constraintOptions.interactionType=1,this.constraintOptions.interactionFactor=p.pixelDistanceToInteractionFactor(t.radius-this.beginRadius),p.applyAll(this.view,this.currentCamera,this.constraintOptions)},e.prototype.panningSpherical=function(t,e,n){this.currentPoints,this.computeSpherePoints(t,"currentEvent",this.sphere,this.currentCamera,this.currentPoints),c.centroidOnSphere(this.sphere.radius,this.currentPoints,this.currentCenter),c.navPointToScreenPoint(this.currentCamera,e.center,this.tmp2d),c.applyPanSpherical(this.sphere,this.currentCamera,this.beginScenePoints.center,this.currentCenter,{estimator:this.momentumController,time:n,endScreenPoint:this.tmp2d}),this.constraintOptions.interactionType=4,this.constraintOptions.interactionFactor=p.pixelDistanceToInteractionFactor(this.screenPickPoint,this.tmp2d),p.applyAll(this.view,this.currentCamera,this.constraintOptions)},e.prototype.rotateSpherical=function(t,e,n){var r=t.length;i.vec3d.normalize(this.beginScenePoints.center,this.rotationAxis),this.computeSpherePoints(t,"currentEvent",this.sphere,this.currentCamera,this.currentPoints);for(var o=0,a=0;r>a;a++)o+=c.rotationFromPointsAroundAxis(this.currentPoints[a],this.beginScenePoints.points[a],this.rotationAxis);o/=r;var s=this.smoothRotation.value,h=o-s;h=c.normalizeRotationDelta(h),o=s+h;var l=.00125*Math.min(Math.max(e.radius,40),120);this.smoothRotation.gain=l,this.smoothRotation.update(o);var m=this.smoothRotation.value;this.momentumController.addRotationValue(n,m),c.applyRotation(this.currentCamera,this.sphere.center,this.rotationAxis,m),this.constraintOptions.interactionType=2,this.constraintOptions.interactionFactor=p.pixelDistanceToInteractionFactor(e.radius*o),p.applyAll(this.view,this.currentCamera,this.constraintOptions)},e.prototype.panningPlanar=function(t,e,n){c.navPointToScreenPoint(this.currentCamera,e.center,this.tmp2d),c.intersectPlaneFromScreenPoint(this.panningPlane,this.currentCamera,this.tmp2d,this.tmp3d)&&(c.applyPanPlanar(this.currentCamera,this.panningCenterScene,this.tmp3d,{estimator:this.momentumController,time:n,endScreenPoint:this.tmp2d}),this.constraintOptions.interactionType=4,this.constraintOptions.interactionFactor=p.pixelDistanceToInteractionFactor(this.beginScreenPoint,this.tmp2d),this.constraintOptions.interactionDirection=this.view.renderCoordsHelper.worldUpAtPosition(this.currentCamera.eye,this.tmpInteractionDirection),p.applyAll(this.view,this.currentCamera,this.constraintOptions),this.constraintOptions.interactionDirection=null)},e.prototype.zoomPlanar=function(t,e,n){var i=this.beginRadius/e.radius,r=.001875*Math.min(Math.max(e.radius,40),120);this.smoothScaling.gain=r,this.smoothScaling.update(i),this.momentumController.addScaleValue(n,this.smoothScaling.value),this.momentumController.setParametersVertical(this.panningCenterScene),c.applyZoomToPoint(this.currentCamera,this.panningCenterScene,this.smoothScaling.value,this.view.state.constraints.minimumPoiDistance),this.constraintOptions.interactionType=1,this.constraintOptions.interactionFactor=p.pixelDistanceToInteractionFactor(e.radius-this.beginRadius),p.applyAll(this.view,this.currentCamera,this.constraintOptions)},e.prototype.rotatePlanar=function(t,e,n){i.vec3d.set(this.panningCenterScene,this.rotationAxis);var r=e.angle,o=this.smoothRotation.value,a=r-o;a=c.normalizeRotationDelta(a),r=o+a;var s=.00125*Math.min(Math.max(e.radius,40),120);this.smoothRotation.gain=s,this.smoothRotation.update(r);var h=this.smoothRotation.value;this.momentumController.addRotationValue(n,h),c.applyRotation(this.currentCamera,this.sphere.center,this.rotationAxis,h),this.constraintOptions.interactionType=2,this.constraintOptions.interactionFactor=p.pixelDistanceToInteractionFactor(e.radius*h),p.applyAll(this.view,this.currentCamera,this.constraintOptions)},e}(a.InteractiveController);e.PinchAndPanController=l});