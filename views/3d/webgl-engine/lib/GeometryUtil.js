// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.6/esri/copyright.txt for details.

define(["./GeometryData","./BufferVectorMath","./Util","./gl-matrix"],function(r,a,e,t){function n(r,a,e,t,n){return!(Math.abs(l.dot(a,r))>n)&&(l.cross(r,a,e),l.normalize(e),l.cross(e,r,t),l.normalize(t),!0)}function o(r,a,e,t,o,l,i){return n(r,a,o,l,i)||n(r,e,o,l,i)||n(r,t,o,l,i)}var l=t.vec3,i=t.vec4,s=t.vec3d,c=e.VertexAttrConstants,v=a.Vec3Compact,A=s.create(),y=s.create(),h={createSphereGeometry:function(a,t,n,o,i,s,v){a=a||50,o=void 0!==o?o:-Math.PI,i=void 0!==i?i:2*Math.PI,s=void 0!==s?s:.5*-Math.PI,v=void 0!==v?v:Math.PI;var A,y,h=Math.max(3,Math.floor(t)||8),f=Math.max(2,Math.floor(n)||6),O=(h+1)*(f+1),d=new Float32Array(3*O),u=new Float32Array(3*O),w=new Float32Array(2*O),m=[],g=l.create(),I=0;for(y=0;y<=f;y++){var z=[],M=y/f,F=s+M*v,N=Math.cos(F);for(A=0;A<=h;A++){var P=A/h,U=o+P*i,S=Math.cos(U)*N*a,L=Math.sin(F)*a,R=-Math.sin(U)*N*a;d[3*I]=S,d[3*I+1]=L,d[3*I+2]=R,l.set3(S,L,R,g),l.normalize(g),u[3*I]=g[0],u[3*I+1]=g[1],u[3*I+2]=g[2],w[2*I]=P,w[2*I+1]=M,z.push(I),++I}m.push(z)}var T=new Uint32Array(2*h*(f-1)*3);for(I=0,y=0;y<f;y++)for(A=0;A<h;A++){var p=m[y][A],V=m[y][A+1],G=m[y+1][A+1],b=m[y+1][A];0===y?(T[I++]=p,T[I++]=G,T[I++]=b):y===f-1?(T[I++]=p,T[I++]=V,T[I++]=G):(T[I++]=p,T[I++]=V,T[I++]=G,T[I++]=G,T[I++]=b,T[I++]=p)}e.assert(I===T.length);var x={};x[c.POSITION]=T,x[c.NORMAL]=T,x[c.UV0]=T;var C={};return C[c.POSITION]={size:3,data:d},C[c.NORMAL]={size:3,data:u},C[c.UV0]={size:2,data:w},new r(C,x)},createPolySphereGeometry:function(a,e,t){function n(r,e){r>e&&(r=e+(e=r,0));var t=r.toString()+"."+e.toString();if(y[t])return y[t];var n=l.length;return l.length+=3,v.add(l,3*r,l,3*e,l,n),v.scale(l,n,a/v.length(l,n)),n/=3,y[t]=n,n}var o,l,i,s=a;if(t)l=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],i=[0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1];else{var A=s*(1+Math.sqrt(5))/2;l=[-s,A,0,s,A,0,-s,-A,0,s,-A,0,0,-s,A,0,s,A,0,-s,-A,0,s,-A,A,0,-s,A,0,s,-A,0,-s,-A,0,s],i=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1]}for(o=0;o<l.length;o+=3)v.scale(l,o,a/v.length(l,o));var y={};for(o=0;o<e;o++){for(var h=i.length,f=new Uint32Array(4*h),O=0;O<h;O+=3){var d=i[O],u=i[O+1],w=i[O+2],m=n(d,u),g=n(u,w),I=n(w,d),z=4*O;f[z]=d,f[z+1]=m,f[z+2]=I,f[z+3]=u,f[z+4]=g,f[z+5]=m,f[z+6]=w,f[z+7]=I,f[z+8]=g,f[z+9]=m,f[z+10]=g,f[z+11]=I}i=f,y={}}var M=new Float32Array(l);for(o=0;o<M;o+=3)v.normalize(M,o);l=new Float32Array(l);var F={};F[c.POSITION]=i,F[c.NORMAL]=i;var N={};return N[c.POSITION]={size:3,data:l},N[c.NORMAL]={size:3,data:M},new r(N,F)},createPointGeometry:function(a,e,t,n,o,l,i){var s=new Float32Array(3);s[0]=e?e[0]:0,s[1]=e?e[1]:0,s[2]=e?e[2]:0;var v=new Float32Array(3);if(v[0]=a?a[0]:0,v[1]=a?a[1]:0,v[2]=a?a[2]:1,null==l){var A=new Float32Array(2);A[0]=0,A[1]=0}else{A=new Float32Array(l.length);for(var y=0;y<l.length;y++)A[y]=l[y]}var h=new Uint8Array(4);h[0]=t?255*t[0]:255,h[1]=t?255*t[1]:255,h[2]=t?255*t[2]:255,h[3]=t&&t.length>3?255*t[3]:255;var f=new Float32Array(2);if(f[0]=null!=n&&2==n.length?n[0]:1,f[1]=null!=n&&2==n.length?n[1]:1,null!=o){var O=new Float32Array(4);O[0]=o[0],O[1]=o[1],O[2]=o[2],O[3]=o[3]}if(null!=i){var d=new Float32Array(4);d[0]=i[0],d[1]=i[1],d[2]=i[2],d[3]=i[3]}var u=new Uint32Array(1);u[0]=0;var w={};w[c.POSITION]=u,w[c.NORMAL]=u,w[c.UV0]=u,w[c.COLOR]=u,w[c.SIZE]=u,null!=o&&(w[c.AUXPOS1]=u),null!=i&&(w[c.AUXPOS2]=u);var m={};return m[c.POSITION]={size:3,data:s},m[c.NORMAL]={size:3,data:v},m[c.UV0]={size:A.length,data:A},m[c.COLOR]={size:4,data:h},m[c.SIZE]={size:2,data:f},null!=o&&(m[c.AUXPOS1]={size:4,data:O}),null!=i&&(m[c.AUXPOS2]={size:4,data:d}),new r(m,w,r.DefaultOffsets,"point")},createPointArrayGeometry:function(a,e){for(var t=new Float32Array(3*a.length),n=new Float32Array(e?3*a.length:3),o=new Uint32Array(a.length),l=new Uint32Array(a.length),i=0;i<a.length;i++)t[3*i]=a[i][0],t[3*i+1]=a[i][1],t[3*i+2]=a[i][2],e&&(n[3*i]=e[i][0],n[3*i+1]=e[i][1],n[3*i+2]=e[i][2]),o[i]=i,l[i]=0;e||(n[0]=0,n[1]=1,n[2]=0);var s=new Float32Array(2);s[0]=0,s[1]=0;var v={};v[c.POSITION]=o,v[c.NORMAL]=e?o:l,v[c.UV0]=l;var A={};return A[c.POSITION]={size:3,data:t},A[c.NORMAL]={size:3,data:n},A[c.UV0]={size:2,data:s},new r(A,v,r.DefaultOffsets,"point")},createTriangleGeometry:function(){var a=new Float32Array(9);a[0]=0,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=100,a[6]=100,a[7]=0,a[8]=0;var e=new Uint32Array(3);e[0]=0,e[1]=1,e[2]=2;var t=new Float32Array(3);t[0]=0,t[1]=1,t[2]=0;var n=new Uint32Array(3);n[0]=0,n[1]=0,n[2]=0;var o=new Float32Array(2);o[0]=0,o[1]=0;var l=new Uint32Array(3);l[0]=0,l[1]=0,l[2]=0;var i={};i[c.POSITION]=e,i[c.NORMAL]=n,i[c.UV0]=l;var s={};return s[c.POSITION]={size:3,data:a},s[c.NORMAL]={size:3,data:t},s[c.UV0]={size:2,data:o},new r(s,i)},createSquareGeometry:function(a){var e,t,n=new Float32Array(12);if(a)for(e=0;e<4;e++)for(t=0;t<3;t++)n[3*e+t]=a[e][t];else n[0]=-1,n[1]=-1,n[2]=0,n[3]=1,n[4]=-1,n[5]=0,n[6]=1,n[7]=1,n[8]=0,n[9]=-1,n[10]=1,n[11]=0;var o=new Uint32Array(6);o[0]=0,o[1]=1,o[2]=2,o[3]=2,o[4]=3,o[5]=0;var l=new Float32Array(3);l[0]=0,l[1]=0,l[2]=1;var i=new Uint32Array(6);for(e=0;e<6;e++)i[e]=0;var s=new Float32Array(8);s[0]=0,s[1]=0,s[2]=1,s[3]=0,s[4]=1,s[5]=1,s[6]=0,s[7]=1;var v=new Uint8Array(4);v[0]=255,v[1]=255,v[2]=255,v[3]=255;var A={};A[c.POSITION]=o,A[c.NORMAL]=i,A[c.UV0]=o,A[c.COLOR]=i;var y={};return y[c.POSITION]={size:3,data:n},y[c.NORMAL]={size:3,data:l},y[c.UV0]={size:2,data:s},y[c.COLOR]={size:4,data:v},new r(y,A)},createBoxGeometry:function(){var a,e,t=.5,n=[[-t,-t,t],[t,-t,t],[t,t,t],[-t,t,t],[-t,-t,-t],[t,-t,-t],[t,t,-t],[-t,t,-t]],o=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1],l=[0,0,1,0,1,1,0,1],i=[0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,6,2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5],s=new Array(36);for(a=0;a<6;a++)for(e=0;e<6;e++)s[6*a+e]=a;var v=new Array(36);for(a=0;a<6;a++)v[6*a+0]=0,v[6*a+1]=1,v[6*a+2]=2,v[6*a+3]=2,v[6*a+4]=3,v[6*a+5]=0;return function(a){var e;Array.isArray(a)||(a=[a,a,a]);var t=new Float32Array(24);for(e=0;e<8;e++)t[3*e]=n[e][0]*a[0],t[3*e+1]=n[e][1]*a[1],t[3*e+2]=n[e][2]*a[2];var A={};A[c.POSITION]=new Uint32Array(i),A[c.NORMAL]=new Uint32Array(s),A[c.UV0]=new Uint32Array(v);var y={};return y[c.POSITION]={size:3,data:t},y[c.NORMAL]={size:3,data:new Float32Array(o)},y[c.UV0]={size:2,data:new Float32Array(l)},new r(y,A)}}(),createDiamondGeometry:function(){var a=.5,e=[[-a,0,-a],[a,0,-a],[a,0,a],[-a,0,a],[0,-a,0],[0,a,0]],t=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],n=[5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0],o=[0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7];return function(a){var l;Array.isArray(a)||(a=[a,a,a]);var i=new Float32Array(18);for(l=0;l<6;l++)i[3*l]=e[l][0]*a[0],i[3*l+1]=e[l][1]*a[1],i[3*l+2]=e[l][2]*a[2];var s={};s[c.POSITION]=new Uint32Array(n),s[c.NORMAL]=new Uint32Array(o);var v={};return v[c.POSITION]={size:3,data:i},v[c.NORMAL]={size:3,data:new Float32Array(t)},new r(v,s)}}(),createTetrahedronGeometry:function(){var a=.5,e=l.createFrom(-a,0,-a),t=l.createFrom(a,0,-a),n=l.createFrom(0,0,a),o=l.createFrom(0,.5,0),i=l.create(),s=l.create(),v=l.create(),A=l.create(),y=l.create();l.subtract(e,o,i),l.subtract(e,t,s),l.cross(i,s,v),l.normalize(v,v),l.subtract(t,o,i),l.subtract(t,n,s),l.cross(i,s,A),l.normalize(A,A),l.subtract(n,o,i),l.subtract(n,e,s),l.cross(i,s,y),l.normalize(y,y);var h=[e,t,n,o],f=[0,-1,0,v[0],v[1],v[2],A[0],A[1],A[2],y[0],y[1],y[2]],O=[0,1,2,3,1,0,3,2,1,3,0,2],d=[0,0,0,1,1,1,2,2,2,3,3,3];return function(a){var e;Array.isArray(a)||(a=[a,a,a]);var t=new Float32Array(12);for(e=0;e<4;e++)t[3*e]=h[e][0]*a[0],t[3*e+1]=h[e][1]*a[1],t[3*e+2]=h[e][2]*a[2];var n={};n[c.POSITION]=new Uint32Array(O),n[c.NORMAL]=new Uint32Array(d);var o={};return o[c.POSITION]={size:3,data:t},o[c.NORMAL]={size:3,data:new Float32Array(f)},new r(o,n)}}(),createConeGeometry:function(a,e,t,n){var o,i=0,s=e,v=a,A=l.createFrom(0,i,0),y=l.createFrom(0,i+v,0),h=l.createFrom(0,-1,0),f=l.createFrom(0,1,0);n&&(i=v,y=l.createFrom(0,0,0),A=l.createFrom(0,i,0),h=l.createFrom(0,1,0),f=l.createFrom(0,-1,0));var O=[y,A],d=[h,f],u=t+2,w=0,m=Math.sqrt(v*v+s*s);if(n)for(o=t-1;o>=0;o--)w=o*(2*Math.PI/t),g=l.createFrom(Math.cos(w)*s,i,Math.sin(w)*s),O.push(g),I=l.createFrom(v*Math.cos(w)/m,-s/m,v*Math.sin(w)/m),d.push(I);else for(o=0;o<t;o++){w=o*(2*Math.PI/t);var g=l.createFrom(Math.cos(w)*s,i,Math.sin(w)*s);O.push(g);var I=l.createFrom(v*Math.cos(w)/m,s/m,v*Math.sin(w)/m);d.push(I)}var z=new Uint32Array(2*(t+2)*3),M=new Uint32Array(2*(t+2)*3),F=0,N=0;for(o=3;o<O.length;o++)z[F++]=1,z[F++]=o-1,z[F++]=o,M[N++]=0,M[N++]=0,M[N++]=0;for(z[F++]=O.length-1,z[F++]=2,z[F++]=1,M[N++]=0,M[N++]=0,M[N++]=0,o=3;o<O.length;o++)z[F++]=o,z[F++]=o-1,z[F++]=0,M[N++]=o,M[N++]=o-1,M[N++]=1;z[F++]=0,z[F++]=2,z[F++]=O.length-1,M[N++]=1,M[N++]=2,M[N++]=d.length-1;var P=1;Array.isArray(P)||(P=[P,P,P]);var U=new Float32Array(3*u);for(o=0;o<u;o++)U[3*o]=O[o][0]*P[0],U[3*o+1]=O[o][1]*P[1],U[3*o+2]=O[o][2]*P[2];var S=new Float32Array(3*u);for(o=0;o<u;o++)S[3*o]=d[o][0],S[3*o+1]=d[o][1],S[3*o+2]=d[o][2];var L={};L[c.POSITION]=z,L[c.NORMAL]=M;var R={};return R[c.POSITION]={size:3,data:U},R[c.NORMAL]={size:3,data:S},new r(R,L)},createCylinderGeometry:function(a,e,t,n,o,i){n||(n=l.createFrom(1,0,0)),o||(o=l.createFrom(0,0,0));var s=void 0===i||i,v=l.create();l.normalize(n,v);var A=l.create();l.scale(v,Math.abs(a),A);var y=l.create();l.scale(A,-.5,y),l.add(y,o);var h=l.createFrom(0,1,0);Math.abs(1-l.dot(v,h)<.2)&&l.set3(0,0,1,h);var f=l.create();l.cross(v,h,f),l.normalize(f),l.cross(f,v,h);var O=2*t+(s?2:0),d=t+(s?2:0),u=new Float32Array(3*O),w=new Float32Array(3*d),m=new Float32Array(2*O),g=new Uint32Array(3*t*(s?4:2)),I=new Uint32Array(3*t*(s?4:2));s&&(u[3*(O-2)+0]=y[0],u[3*(O-2)+1]=y[1],u[3*(O-2)+2]=y[2],m[2*(O-2)]=0,m[2*(O-2)+1]=0,u[3*(O-1)+0]=u[3*(O-2)+0]+A[0],u[3*(O-1)+1]=u[3*(O-2)+1]+A[1],u[3*(O-1)+2]=u[3*(O-2)+2]+A[2],m[2*(O-1)]=1,m[2*(O-1)+1]=1,w[3*(d-2)+0]=-v[0],w[3*(d-2)+1]=-v[1],w[3*(d-2)+2]=-v[2],w[3*(d-1)+0]=v[0],w[3*(d-1)+1]=v[1],w[3*(d-1)+2]=v[2]);var z,M,F,N=function(r,a,e){g[r]=a,I[r]=e},P=0,U=l.create(),S=l.create();for(z=0;z<t;z++)F=z*(2*Math.PI/t),l.scale(h,Math.sin(F),U),l.scale(f,Math.cos(F),S),l.add(U,S),w[3*z+0]=U[0],w[3*z+1]=U[1],w[3*z+2]=U[2],l.scale(U,e),l.add(U,y),u[3*z+0]=U[0],u[3*z+1]=U[1],u[3*z+2]=U[2],m[2*z+0]=z/t,m[2*z+1]=0,u[3*(z+t)+0]=u[3*z+0]+A[0],u[3*(z+t)+1]=u[3*z+1]+A[1],u[3*(z+t)+2]=u[3*z+2]+A[2],m[2*(z+t)+0]=z/t,m[2*z+1]=1,M=(z+1)%t,N(P++,z,z),N(P++,z+t,z),N(P++,M,M),N(P++,M,M),N(P++,z+t,z),N(P++,M+t,M);if(s){for(z=0;z<t;z++)M=(z+1)%t,N(P++,O-2,d-2),N(P++,z,d-2),N(P++,M,d-2);for(z=0;z<t;z++)M=(z+1)%t,N(P++,z+t,d-1),N(P++,O-1,d-1),N(P++,M+t,d-1)}var L={};L[c.POSITION]=g,L[c.NORMAL]=I,L[c.UV0]=g;var R={};return R[c.POSITION]={size:3,data:u},R[c.NORMAL]={size:3,data:w},R[c.UV0]={size:2,data:m},new r(R,L)},createTubeGeometry:function(r,a,t,n,o){t=t||10,n=null==n||n,e.assert(r.length>1);for(var l=[[0,0,0]],i=[],s=[],c=0;c<t;c++){i.push([0,-c-1,-(c+1)%t-1]);var v=c/t*2*Math.PI;s.push([Math.cos(v)*a,Math.sin(v)*a])}return h.createPathExtrusionGeometry(s,r,l,i,n,o)},createPathExtrusionGeometry:function(a,t,n,v,A,y){var h,f=a.length,O=new Float32Array(t.length*f*3+(6*n.length||0)),d=new Float32Array(t.length*f+(2*n.length||0)),u=new Float32Array(t.length*f*3+(n?6:0)),w=0,m=0,g=0,I=(t.length-1)*f*6+3*v.length*2,z=new Uint32Array(I),M=new Uint32Array(I),F=0,N=0,P=l.create(),U=l.create(),S=l.create(),L=l.create(),R=(l.create(),l.create()),T=(l.create(),l.create(),l.create()),p=l.create(),V=l.create(),G=l.create(),b=l.create(),x=(l.create(),l.create(),l.create()),C=l.create(),D=l.create(),E=i.create();for(l.set3(0,1,0,G),l.subtract(t[1],t[0],U),l.normalize(U),A?(l.add(t[0],y,V),l.normalize(V,S)):l.set3(0,0,1,S),o(U,S,G,G,R,S,.99619469809),l.set(S,L),l.set(R,C),h=0;h<n.length;h++)l.scale(R,n[h][0],T),l.scale(S,n[h][2],V),l.add(T,V),l.add(T,t[0]),O[w++]=T[0],O[w++]=T[1],O[w++]=T[2],d[g++]=0;for(u[m++]=-U[0],u[m++]=-U[1],u[m++]=-U[2],h=0;h<v.length;h++)z[F++]=v[h][0]>0?v[h][0]:-v[h][0]-1+n.length,z[F++]=v[h][1]>0?v[h][1]:-v[h][1]-1+n.length,z[F++]=v[h][2]>0?v[h][2]:-v[h][2]-1+n.length,M[N++]=0,M[N++]=0,M[N++]=0;for(var X,q=n.length,B=n.length-1,Z=0;Z<t.length;Z++){if(X=!1,Z>0){l.set(U,P),Z<t.length-1?(l.subtract(t[Z+1],t[Z],U),l.normalize(U)):X=!0,l.add(P,U,b),l.normalize(b),l.add(t[Z-1],L,x),E[0]=b[0],E[1]=b[1],E[2]=b[2],E[3]=-s.dot(b,t[Z]);e.rayPlane(x,P,E,V)?(l.subtract(V,t[Z]),l.normalize(V,S),l.cross(b,S,R),l.normalize(R)):o(b,L,C,G,R,S,.99619469809),l.set(S,L),l.set(R,C)}A&&(l.add(t[Z],y,V),l.normalize(V,D));for(var j=0;j<f;j++)if(l.scale(R,a[j][0],T),l.scale(S,a[j][1],V),l.add(T,V),l.normalize(T,p),u[m++]=p[0],u[m++]=p[1],u[m++]=p[2],d[g++]=A?l.dot(T,D):T[2],l.add(T,t[Z]),O[w++]=T[0],O[w++]=T[1],O[w++]=T[2],!X){var k=(j+1)%f;z[F++]=q+j,z[F++]=q+f+j,z[F++]=q+k,z[F++]=q+k,z[F++]=q+f+j,z[F++]=q+f+k;for(var H=0;H<6;H++)M[N++]=z[F-6+H]-B}q+=f}for(X=t[t.length-1],h=0;h<n.length;h++)l.scale(R,n[h][0],T),l.scale(S,n[h][1],V),l.add(T,V),l.add(T,X),O[w++]=T[0],O[w++]=T[1],O[w++]=T[2],d[g++]=0;var J=m/3;u[m++]=U[0],u[m++]=U[1],u[m++]=U[2];var K=q-f;for(h=0;h<v.length;h++)z[F++]=v[h][0]>=0?q+v[h][0]:-v[h][0]-1+K,z[F++]=v[h][2]>=0?q+v[h][2]:-v[h][2]-1+K,z[F++]=v[h][1]>=0?q+v[h][1]:-v[h][1]-1+K,M[N++]=J,M[N++]=J,M[N++]=J;var Q={};Q[c.POSITION]=z,Q[c.NORMAL]=M;var W={};return W[c.POSITION]={size:3,data:O},W.zOffset={size:1,data:d},W[c.NORMAL]={size:3,data:u},new r(W,Q)},createPolylineGeometry:function(a,t){e.assert(a.length>1,"createPolylineGeometry(): polyline needs at least 2 points"),e.assert(3===a[0].length,"createPolylineGeometry(): malformed vertex"),e.assert(void 0===t||t.length===a.length,"createPolylineGeometry: need same number of points and normals"),e.assert(void 0===t||3===t[0].length,"createPolylineGeometry(): malformed normal");for(var n=new Float32Array(3*a.length),o=new Uint32Array(2*(a.length-1)),l=0,i=0,s=0;s<a.length;s++){for(var v=0;v<3;v++)n[l++]=a[s][v];s>0&&(o[i++]=s-1,o[i++]=s)}var A={},y={};if(A[c.POSITION]=o,y[c.POSITION]={size:3,data:n},t){for(var h=new Float32Array(3*t.length),f=0,s=0;s<a.length;s++)for(var v=0;v<3;v++)h[f++]=t[s][v];A[c.NORMAL]=o,y[c.NORMAL]={size:3,data:h}}return new r(y,A,r.DefaultOffsets,"line")},addVertexColors:function(a,e){var t,n,o=e||[1,1,1,1],l=new Uint8Array(4);l[0]=255*o[0],l[1]=255*o[1],l[2]=255*o[2],l[3]=255*(o.length>3?o[3]:1);var i={},s=a.getVertexAttr();for(n in s)i[n]=s[n];i[c.COLOR]={size:4,data:l},t={};for(n in a.indices)t[n]=a.indices[n];var v=t[c.POSITION].length;return t[c.COLOR]=new Uint32Array(v),a=new r(i,t,a.componentOffsets,a.primitiveType)},addNormals:function(r){for(var e=r.getVertexAttr(),t=r.indices,n=a.Vec3Compact.subtract,o=t.position.length/3,l=new Float32Array(3*o),i=e.position.data,c=0,v=t.position,h=new Uint32Array(v.length),f=0;f<v.length;f+=3){n(i,3*v[f],i,3*v[f+2],y,0),n(i,3*v[f],i,3*v[f+1],A,0),s.cross(A,y),s.normalize(A);var O=c/3;l[c++]=A[0],l[c++]=A[1],l[c++]=A[2],h[f]=O,h[f+1]=O,h[f+2]=O}e.normal={size:3,data:l},t.normal=h},cgToGIS:function(r){var a,e,t=r.getVertexAttr(),n=t.position.data,o=t.normal.data;if(o)for(a=0;a<o.length;a+=3)e=o[a+1],o[a+1]=-o[a+2],o[a+2]=e;if(n)for(a=0;a<n.length;a+=3)e=n[a+1],n[a+1]=-n[a+2],n[a+2]=e}};return h});