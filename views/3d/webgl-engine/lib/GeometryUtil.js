// COPYRIGHT Â© 2017 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.6/esri/copyright.txt for details.

define(["./GeometryData","./BufferVectorMath","./Util","./gl-matrix"],function(r,a,e,t){function n(r,a,e,t,n){return Math.abs(c.dot(a,r))>n?!1:(c.cross(r,a,e),c.normalize(e),c.cross(e,r,t),c.normalize(t),!0)}function o(r,a,e,t,o,l,i){return n(r,a,o,l,i)||n(r,e,o,l,i)||n(r,t,o,l,i)}function l(){var a,e,t=.5,n=[[-t,-t,t],[t,-t,t],[t,t,t],[-t,t,t],[-t,-t,-t],[t,-t,-t],[t,t,-t],[-t,t,-t]],o=[0,0,1,-1,0,0,1,0,0,0,-1,0,0,1,0,0,0,-1],l=[0,0,1,0,1,1,0,1],i=[0,1,2,2,3,0,4,0,3,3,7,4,1,5,6,6,2,1,1,0,4,4,5,1,3,2,6,6,7,3,5,4,7,7,6,5],s=new Array(36);for(a=0;6>a;a++)for(e=0;6>e;e++)s[6*a+e]=a;var c=new Array(36);for(a=0;6>a;a++)c[6*a+0]=0,c[6*a+1]=1,c[6*a+2]=2,c[6*a+3]=2,c[6*a+4]=3,c[6*a+5]=0;return function(a){var e;Array.isArray(a)||(a=[a,a,a]);var t=new Float32Array(24);for(e=0;8>e;e++)t[3*e]=n[e][0]*a[0],t[3*e+1]=n[e][1]*a[1],t[3*e+2]=n[e][2]*a[2];var v={};v[y.POSITION]=new Uint32Array(i),v[y.NORMAL]=new Uint32Array(s),v[y.UV0]=new Uint32Array(c);var A={};return A[y.POSITION]={size:3,data:t},A[y.NORMAL]={size:3,data:new Float32Array(o)},A[y.UV0]={size:2,data:new Float32Array(l)},new r(A,v)}}function i(){var a=.5,e=[[-a,0,-a],[a,0,-a],[a,0,a],[-a,0,a],[0,-a,0],[0,a,0]],t=[0,1,-1,1,1,0,0,1,1,-1,1,0,0,-1,-1,1,-1,0,0,-1,1,-1,-1,0],n=[5,1,0,5,2,1,5,3,2,5,0,3,4,0,1,4,1,2,4,2,3,4,3,0],o=[0,0,0,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7];return function(a){var l;Array.isArray(a)||(a=[a,a,a]);var i=new Float32Array(18);for(l=0;6>l;l++)i[3*l]=e[l][0]*a[0],i[3*l+1]=e[l][1]*a[1],i[3*l+2]=e[l][2]*a[2];var s={};s[y.POSITION]=new Uint32Array(n),s[y.NORMAL]=new Uint32Array(o);var c={};return c[y.POSITION]={size:3,data:i},c[y.NORMAL]={size:3,data:new Float32Array(t)},new r(c,s)}}function s(){var a=.5,e=0,t=c.createFrom(-a,e,-a),n=c.createFrom(a,e,-a),o=c.createFrom(0,e,a),l=c.createFrom(0,e+a,0),i=c.create(),s=c.create(),v=c.create(),A=c.create(),h=c.create();c.subtract(t,l,i),c.subtract(t,n,s),c.cross(i,s,v),c.normalize(v,v),c.subtract(n,l,i),c.subtract(n,o,s),c.cross(i,s,A),c.normalize(A,A),c.subtract(o,l,i),c.subtract(o,t,s),c.cross(i,s,h),c.normalize(h,h);var f=[t,n,o,l],O=[0,-1,0,v[0],v[1],v[2],A[0],A[1],A[2],h[0],h[1],h[2]],d=[0,1,2,3,1,0,3,2,1,3,0,2],u=[0,0,0,1,1,1,2,2,2,3,3,3];return function(a){var e;Array.isArray(a)||(a=[a,a,a]);var t=new Float32Array(12);for(e=0;4>e;e++)t[3*e]=f[e][0]*a[0],t[3*e+1]=f[e][1]*a[1],t[3*e+2]=f[e][2]*a[2];var n={};n[y.POSITION]=new Uint32Array(d),n[y.NORMAL]=new Uint32Array(u);var o={};return o[y.POSITION]={size:3,data:t},o[y.NORMAL]={size:3,data:new Float32Array(O)},new r(o,n)}}var c=t.vec3,v=t.vec4,A=t.vec3d,y=e.VertexAttrConstants,h=a.Vec3Compact,f=.99619469809,O=A.create(),d=A.create(),u={createSphereGeometry:function(a,t,n,o,l,i,s){a=a||50,o=void 0!==o?o:-Math.PI,l=void 0!==l?l:2*Math.PI,i=void 0!==i?i:.5*-Math.PI,s=void 0!==s?s:Math.PI;var v,A,h=Math.max(3,Math.floor(t)||8),f=Math.max(2,Math.floor(n)||6),O=(h+1)*(f+1),d=new Float32Array(3*O),u=new Float32Array(3*O),w=new Float32Array(2*O),m=[],g=c.create(),I=0;for(A=0;f>=A;A++){var z=[],M=A/f,F=i+M*s,N=Math.cos(F);for(v=0;h>=v;v++){var P=v/h,U=o+P*l,S=Math.cos(U)*N*a,L=Math.sin(F)*a,R=-Math.sin(U)*N*a;d[3*I]=S,d[3*I+1]=L,d[3*I+2]=R,c.set3(S,L,R,g),c.normalize(g),u[3*I]=g[0],u[3*I+1]=g[1],u[3*I+2]=g[2],w[2*I]=P,w[2*I+1]=M,z.push(I),++I}m.push(z)}var T=new Uint32Array(2*h*(f-1)*3);for(I=0,A=0;f>A;A++)for(v=0;h>v;v++){var p=m[A][v],V=m[A][v+1],G=m[A+1][v+1],b=m[A+1][v];0===A?(T[I++]=p,T[I++]=G,T[I++]=b):A===f-1?(T[I++]=p,T[I++]=V,T[I++]=G):(T[I++]=p,T[I++]=V,T[I++]=G,T[I++]=G,T[I++]=b,T[I++]=p)}e.assert(I===T.length);var x={};x[y.POSITION]=T,x[y.NORMAL]=T,x[y.UV0]=T;var C={};return C[y.POSITION]={size:3,data:d},C[y.NORMAL]={size:3,data:u},C[y.UV0]={size:2,data:w},new r(C,x)},createPolySphereGeometry:function(a,e,t){function n(r,e){r>e&&(r=e+(e=r,0));var t=r.toString()+"."+e.toString();if(v[t])return v[t];var n=l.length;return l.length+=3,h.add(l,3*r,l,3*e,l,n),h.scale(l,n,a/h.length(l,n)),n/=3,v[t]=n,n}var o,l,i,s=a;if(t)l=[0,-1,0,1,0,0,0,0,1,-1,0,0,0,0,-1,0,1,0],i=[0,1,2,0,2,3,0,3,4,0,4,1,1,5,2,2,5,3,3,5,4,4,5,1];else{var c=s*(1+Math.sqrt(5))/2;l=[-s,c,0,s,c,0,-s,-c,0,s,-c,0,0,-s,c,0,s,c,0,-s,-c,0,s,-c,c,0,-s,c,0,s,-c,0,-s,-c,0,s],i=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1]}for(o=0;o<l.length;o+=3)h.scale(l,o,a/h.length(l,o));var v={};for(o=0;e>o;o++){for(var A=i.length,f=new Uint32Array(4*A),O=0;A>O;O+=3){var d=i[O],u=i[O+1],w=i[O+2],m=n(d,u),g=n(u,w),I=n(w,d),z=4*O;f[z]=d,f[z+1]=m,f[z+2]=I,f[z+3]=u,f[z+4]=g,f[z+5]=m,f[z+6]=w,f[z+7]=I,f[z+8]=g,f[z+9]=m,f[z+10]=g,f[z+11]=I}i=f,v={}}var M=new Float32Array(l);for(o=0;M>o;o+=3)h.normalize(M,o);l=new Float32Array(l);var F={};F[y.POSITION]=i,F[y.NORMAL]=i;var N={};return N[y.POSITION]={size:3,data:l},N[y.NORMAL]={size:3,data:M},new r(N,F)},createPointGeometry:function(a,e,t,n,o,l,i){var s=new Float32Array(3);s[0]=e?e[0]:0,s[1]=e?e[1]:0,s[2]=e?e[2]:0;var c=new Float32Array(3);if(c[0]=a?a[0]:0,c[1]=a?a[1]:0,c[2]=a?a[2]:1,null==l){var v=new Float32Array(2);v[0]=0,v[1]=0}else{v=new Float32Array(l.length);for(var A=0;A<l.length;A++)v[A]=l[A]}var h=new Uint8Array(4);h[0]=t?255*t[0]:255,h[1]=t?255*t[1]:255,h[2]=t?255*t[2]:255,h[3]=t&&t.length>3?255*t[3]:255;var f=new Float32Array(2);if(f[0]=null!=n&&2==n.length?n[0]:1,f[1]=null!=n&&2==n.length?n[1]:1,null!=o){var O=new Float32Array(4);O[0]=o[0],O[1]=o[1],O[2]=o[2],O[3]=o[3]}if(null!=i){var d=new Float32Array(4);d[0]=i[0],d[1]=i[1],d[2]=i[2],d[3]=i[3]}var u=new Uint32Array(1);u[0]=0;var w={};w[y.POSITION]=u,w[y.NORMAL]=u,w[y.UV0]=u,w[y.COLOR]=u,w[y.SIZE]=u,null!=o&&(w[y.AUXPOS1]=u),null!=i&&(w[y.AUXPOS2]=u);var m={};return m[y.POSITION]={size:3,data:s},m[y.NORMAL]={size:3,data:c},m[y.UV0]={size:v.length,data:v},m[y.COLOR]={size:4,data:h},m[y.SIZE]={size:2,data:f},null!=o&&(m[y.AUXPOS1]={size:4,data:O}),null!=i&&(m[y.AUXPOS2]={size:4,data:d}),new r(m,w,r.DefaultOffsets,"point")},createPointArrayGeometry:function(a,e){for(var t=new Float32Array(3*a.length),n=new Float32Array(e?3*a.length:3),o=new Uint32Array(a.length),l=new Uint32Array(a.length),i=0;i<a.length;i++)t[3*i]=a[i][0],t[3*i+1]=a[i][1],t[3*i+2]=a[i][2],e&&(n[3*i]=e[i][0],n[3*i+1]=e[i][1],n[3*i+2]=e[i][2]),o[i]=i,l[i]=0;e||(n[0]=0,n[1]=1,n[2]=0);var s=new Float32Array(2);s[0]=0,s[1]=0;var c={};c[y.POSITION]=o,c[y.NORMAL]=e?o:l,c[y.UV0]=l;var v={};return v[y.POSITION]={size:3,data:t},v[y.NORMAL]={size:3,data:n},v[y.UV0]={size:2,data:s},new r(v,c,r.DefaultOffsets,"point")},createTriangleGeometry:function(){var a=new Float32Array(9);a[0]=0,a[1]=0,a[2]=0,a[3]=0,a[4]=0,a[5]=100,a[6]=100,a[7]=0,a[8]=0;var e=new Uint32Array(3);e[0]=0,e[1]=1,e[2]=2;var t=new Float32Array(3);t[0]=0,t[1]=1,t[2]=0;var n=new Uint32Array(3);n[0]=0,n[1]=0,n[2]=0;var o=new Float32Array(2);o[0]=0,o[1]=0;var l=new Uint32Array(3);l[0]=0,l[1]=0,l[2]=0;var i={};i[y.POSITION]=e,i[y.NORMAL]=n,i[y.UV0]=l;var s={};return s[y.POSITION]={size:3,data:a},s[y.NORMAL]={size:3,data:t},s[y.UV0]={size:2,data:o},new r(s,i)},createSquareGeometry:function(a){var e,t,n=new Float32Array(12);if(a)for(e=0;4>e;e++)for(t=0;3>t;t++)n[3*e+t]=a[e][t];else n[0]=-1,n[1]=-1,n[2]=0,n[3]=1,n[4]=-1,n[5]=0,n[6]=1,n[7]=1,n[8]=0,n[9]=-1,n[10]=1,n[11]=0;var o=new Uint32Array(6);o[0]=0,o[1]=1,o[2]=2,o[3]=2,o[4]=3,o[5]=0;var l=new Float32Array(3);l[0]=0,l[1]=0,l[2]=1;var i=new Uint32Array(6);for(e=0;6>e;e++)i[e]=0;var s=new Float32Array(8);s[0]=0,s[1]=0,s[2]=1,s[3]=0,s[4]=1,s[5]=1,s[6]=0,s[7]=1;var c=new Uint8Array(4);c[0]=255,c[1]=255,c[2]=255,c[3]=255;var v={};v[y.POSITION]=o,v[y.NORMAL]=i,v[y.UV0]=o,v[y.COLOR]=i;var A={};return A[y.POSITION]={size:3,data:n},A[y.NORMAL]={size:3,data:l},A[y.UV0]={size:2,data:s},A[y.COLOR]={size:4,data:c},new r(A,v)},createBoxGeometry:l(),createDiamondGeometry:i(),createTetrahedronGeometry:s(),createConeGeometry:function(a,e,t,n){var o,l=0,i=e,s=a,v=c.createFrom(0,l,0),A=c.createFrom(0,l+s,0),h=c.createFrom(0,-1,0),f=c.createFrom(0,1,0);n&&(l=s,A=c.createFrom(0,0,0),v=c.createFrom(0,l,0),h=c.createFrom(0,1,0),f=c.createFrom(0,-1,0));var O=[A,v],d=[h,f],u=t+2,w=0,m=Math.sqrt(s*s+i*i);if(n)for(o=t-1;o>=0;o--)w=o*(2*Math.PI/t),g=c.createFrom(Math.cos(w)*i,l,Math.sin(w)*i),O.push(g),I=c.createFrom(s*Math.cos(w)/m,-i/m,s*Math.sin(w)/m),d.push(I);else for(o=0;t>o;o++){w=o*(2*Math.PI/t);var g=c.createFrom(Math.cos(w)*i,l,Math.sin(w)*i);O.push(g);var I=c.createFrom(s*Math.cos(w)/m,i/m,s*Math.sin(w)/m);d.push(I)}var z=new Uint32Array(2*(t+2)*3),M=new Uint32Array(2*(t+2)*3),F=0,N=0;for(o=3;o<O.length;o++)z[F++]=1,z[F++]=o-1,z[F++]=o,M[N++]=0,M[N++]=0,M[N++]=0;for(z[F++]=O.length-1,z[F++]=2,z[F++]=1,M[N++]=0,M[N++]=0,M[N++]=0,o=3;o<O.length;o++)z[F++]=o,z[F++]=o-1,z[F++]=0,M[N++]=o,M[N++]=o-1,M[N++]=1;z[F++]=0,z[F++]=2,z[F++]=O.length-1,M[N++]=1,M[N++]=2,M[N++]=d.length-1;var P=1;Array.isArray(P)||(P=[P,P,P]);var U=new Float32Array(3*u);for(o=0;u>o;o++)U[3*o]=O[o][0]*P[0],U[3*o+1]=O[o][1]*P[1],U[3*o+2]=O[o][2]*P[2];var S=new Float32Array(3*u);for(o=0;u>o;o++)S[3*o]=d[o][0],S[3*o+1]=d[o][1],S[3*o+2]=d[o][2];var L={};L[y.POSITION]=z,L[y.NORMAL]=M;var R={};return R[y.POSITION]={size:3,data:U},R[y.NORMAL]={size:3,data:S},new r(R,L)},createCylinderGeometry:function(a,e,t,n,o,l){n||(n=c.createFrom(1,0,0)),o||(o=c.createFrom(0,0,0));var i=void 0===l?!0:l,s=c.create();c.normalize(n,s);var v=c.create();c.scale(s,Math.abs(a),v);var A=c.create();c.scale(v,-.5,A),c.add(A,o);var h=c.createFrom(0,1,0);Math.abs(1-c.dot(s,h)<.2)&&c.set3(0,0,1,h);var f=c.create();c.cross(s,h,f),c.normalize(f),c.cross(f,s,h);var O=2*t+(i?2:0),d=t+(i?2:0),u=new Float32Array(3*O),w=new Float32Array(3*d),m=new Float32Array(2*O),g=new Uint32Array(3*t*(i?4:2)),I=new Uint32Array(3*t*(i?4:2));i&&(u[3*(O-2)+0]=A[0],u[3*(O-2)+1]=A[1],u[3*(O-2)+2]=A[2],m[2*(O-2)]=0,m[2*(O-2)+1]=0,u[3*(O-1)+0]=u[3*(O-2)+0]+v[0],u[3*(O-1)+1]=u[3*(O-2)+1]+v[1],u[3*(O-1)+2]=u[3*(O-2)+2]+v[2],m[2*(O-1)]=1,m[2*(O-1)+1]=1,w[3*(d-2)+0]=-s[0],w[3*(d-2)+1]=-s[1],w[3*(d-2)+2]=-s[2],w[3*(d-1)+0]=s[0],w[3*(d-1)+1]=s[1],w[3*(d-1)+2]=s[2]);var z,M,F,N=function(r,a,e){g[r]=a,I[r]=e},P=0,U=c.create(),S=c.create();for(z=0;t>z;z++)F=z*(2*Math.PI/t),c.scale(h,Math.sin(F),U),c.scale(f,Math.cos(F),S),c.add(U,S),w[3*z+0]=U[0],w[3*z+1]=U[1],w[3*z+2]=U[2],c.scale(U,e),c.add(U,A),u[3*z+0]=U[0],u[3*z+1]=U[1],u[3*z+2]=U[2],m[2*z+0]=z/t,m[2*z+1]=0,u[3*(z+t)+0]=u[3*z+0]+v[0],u[3*(z+t)+1]=u[3*z+1]+v[1],u[3*(z+t)+2]=u[3*z+2]+v[2],m[2*(z+t)+0]=z/t,m[2*z+1]=1,M=(z+1)%t,N(P++,z,z),N(P++,z+t,z),N(P++,M,M),N(P++,M,M),N(P++,z+t,z),N(P++,M+t,M);if(i){for(z=0;t>z;z++)M=(z+1)%t,N(P++,O-2,d-2),N(P++,z,d-2),N(P++,M,d-2);for(z=0;t>z;z++)M=(z+1)%t,N(P++,z+t,d-1),N(P++,O-1,d-1),N(P++,M+t,d-1)}var L={};L[y.POSITION]=g,L[y.NORMAL]=I,L[y.UV0]=g;var R={};return R[y.POSITION]={size:3,data:u},R[y.NORMAL]={size:3,data:w},R[y.UV0]={size:2,data:m},new r(R,L)},createTubeGeometry:function(r,a,t,n,o){t=t||10,n=null!=n?n:!0,e.assert(r.length>1);for(var l=[[0,0,0]],i=[],s=[],c=0;t>c;c++){i.push([0,-c-1,-((c+1)%t)-1]);var v=c/t*2*Math.PI;s.push([Math.cos(v)*a,Math.sin(v)*a])}return u.createPathExtrusionGeometry(s,r,l,i,n,o)},createPathExtrusionGeometry:function(a,t,n,l,i,s){var h,O=a.length,d=new Float32Array(t.length*O*3+(6*n.length||0)),u=new Float32Array(t.length*O+(2*n.length||0)),w=new Float32Array(t.length*O*3+(n?6:0)),m=0,g=0,I=0,z=(t.length-1)*O*6+3*l.length*2,M=new Uint32Array(z),F=new Uint32Array(z),N=0,P=0,U=c.create(),S=c.create(),L=c.create(),R=c.create(),T=(c.create(),c.create()),p=(c.create(),c.create(),c.create()),V=c.create(),G=c.create(),b=c.create(),x=c.create(),C=(c.create(),c.create(),c.create()),D=c.create(),E=c.create(),X=v.create();for(c.set3(0,1,0,b),c.subtract(t[1],t[0],S),c.normalize(S),i?(c.add(t[0],s,G),c.normalize(G,L)):c.set3(0,0,1,L),o(S,L,b,b,T,L,f),c.set(L,R),c.set(T,D),h=0;h<n.length;h++)c.scale(T,n[h][0],p),c.scale(L,n[h][2],G),c.add(p,G),c.add(p,t[0]),d[m++]=p[0],d[m++]=p[1],d[m++]=p[2],u[I++]=0;for(w[g++]=-S[0],w[g++]=-S[1],w[g++]=-S[2],h=0;h<l.length;h++)M[N++]=l[h][0]>0?l[h][0]:-l[h][0]-1+n.length,M[N++]=l[h][1]>0?l[h][1]:-l[h][1]-1+n.length,M[N++]=l[h][2]>0?l[h][2]:-l[h][2]-1+n.length,F[P++]=0,F[P++]=0,F[P++]=0;for(var q,B=n.length,Z=n.length-1,j=0;j<t.length;j++){if(q=!1,j>0){c.set(S,U),j<t.length-1?(c.subtract(t[j+1],t[j],S),c.normalize(S)):q=!0,c.add(U,S,x),c.normalize(x),c.add(t[j-1],R,C),X[0]=x[0],X[1]=x[1],X[2]=x[2],X[3]=-A.dot(x,t[j]);var k=e.rayPlane(C,U,X,G);k?(c.subtract(G,t[j]),c.normalize(G,L),c.cross(x,L,T),c.normalize(T)):o(x,R,D,b,T,L,f),c.set(L,R),c.set(T,D)}i&&(c.add(t[j],s,G),c.normalize(G,E));for(var H=0;O>H;H++)if(c.scale(T,a[H][0],p),c.scale(L,a[H][1],G),c.add(p,G),c.normalize(p,V),w[g++]=V[0],w[g++]=V[1],w[g++]=V[2],i?u[I++]=c.dot(p,E):u[I++]=p[2],c.add(p,t[j]),d[m++]=p[0],d[m++]=p[1],d[m++]=p[2],!q){var J=(H+1)%O;M[N++]=B+H,M[N++]=B+O+H,M[N++]=B+J,M[N++]=B+J,M[N++]=B+O+H,M[N++]=B+O+J;for(var K=0;6>K;K++)F[P++]=M[N-6+K]-Z}B+=O}for(q=t[t.length-1],h=0;h<n.length;h++)c.scale(T,n[h][0],p),c.scale(L,n[h][1],G),c.add(p,G),c.add(p,q),d[m++]=p[0],d[m++]=p[1],d[m++]=p[2],u[I++]=0;var Q=g/3;w[g++]=S[0],w[g++]=S[1],w[g++]=S[2];var W=B-O;for(h=0;h<l.length;h++)M[N++]=l[h][0]>=0?B+l[h][0]:-l[h][0]-1+W,M[N++]=l[h][2]>=0?B+l[h][2]:-l[h][2]-1+W,M[N++]=l[h][1]>=0?B+l[h][1]:-l[h][1]-1+W,F[P++]=Q,F[P++]=Q,F[P++]=Q;var Y={};Y[y.POSITION]=M,Y[y.NORMAL]=F;var $={};return $[y.POSITION]={size:3,data:d},$.zOffset={size:1,data:u},$[y.NORMAL]={size:3,data:w},new r($,Y)},createPolylineGeometry:function(a,t){e.assert(a.length>1,"createPolylineGeometry(): polyline needs at least 2 points"),e.assert(3===a[0].length,"createPolylineGeometry(): malformed vertex"),e.assert(void 0===t||t.length===a.length,"createPolylineGeometry: need same number of points and normals"),e.assert(void 0===t||3===t[0].length,"createPolylineGeometry(): malformed normal");for(var n=new Float32Array(3*a.length),o=new Uint32Array(2*(a.length-1)),l=0,i=0,s=0;s<a.length;s++){for(var c=0;3>c;c++)n[l++]=a[s][c];s>0&&(o[i++]=s-1,o[i++]=s)}var v={},A={};if(v[y.POSITION]=o,A[y.POSITION]={size:3,data:n},t){for(var h=new Float32Array(3*t.length),f=0,s=0;s<a.length;s++)for(var c=0;3>c;c++)h[f++]=t[s][c];v[y.NORMAL]=o,A[y.NORMAL]={size:3,data:h}}return new r(A,v,r.DefaultOffsets,"line")},addVertexColors:function(a,e){var t,n,o=e||[1,1,1,1],l=new Uint8Array(4);l[0]=255*o[0],l[1]=255*o[1],l[2]=255*o[2],l[3]=255*(o.length>3?o[3]:1);var i={},s=a.getVertexAttr();for(n in s)i[n]=s[n];i[y.COLOR]={size:4,data:l},t={};for(n in a.indices)t[n]=a.indices[n];var c=t[y.POSITION].length;return t[y.COLOR]=new Uint32Array(c),a=new r(i,t,a.componentOffsets,a.primitiveType)},addNormals:function(r){for(var e=r.getVertexAttr(),t=r.indices,n=a.Vec3Compact.subtract,o=t.position.length/3,l=new Float32Array(3*o),i=e.position.data,s=0,c=t.position,v=new Uint32Array(c.length),y=0;y<c.length;y+=3){n(i,3*c[y],i,3*c[y+2],d,0),n(i,3*c[y],i,3*c[y+1],O,0),A.cross(O,d),A.normalize(O);var h=s/3;l[s++]=O[0],l[s++]=O[1],l[s++]=O[2],v[y]=h,v[y+1]=h,v[y+2]=h}e.normal={size:3,data:l},t.normal=v},cgToGIS:function(r){var a,e,t=r.getVertexAttr(),n=t.position.data,o=t.normal.data;if(o)for(a=0;a<o.length;a+=3)e=o[a+1],o[a+1]=-o[a+2],o[a+2]=e;if(n)for(a=0;a<n.length;a+=3)e=n[a+1],n[a+1]=-n[a+2],n[a+2]=e}};return u});