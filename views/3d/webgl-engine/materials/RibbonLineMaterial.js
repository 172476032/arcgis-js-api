// COPYRIGHT Â© 2017 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.6/esri/copyright.txt for details.

define(["require","exports","../../../../core/tsSupport/extendsHelper","dojo/text!./RibbonLineMaterial.xml","./internal/MaterialUtil","./internal/MaterialBase","./internal/GLMaterialBase","../lib/Util","../lib/gl-matrix","../lib/RenderSlot","../lib/ComponentUtils","../lib/DefaultVertexBufferLayouts","../lib/ShaderVariations","../../../webgl/Util"],function(t,e,r,i,n,a,o,s,p,l,f,m,d,c){var u="ribbon-line-material-shader-variations",h="ribbon-line-material-highlight-shader-variations",g=function(t){function e(e,r){var i=t.call(this,r)||this;return i.params=n.copyParameters(e,M),"miter"!==i.params.join&&(i.params.miterLimit=0),i.numVertsAtJoin="wall"===i.params.type?2:4,i.numVertsAtCap=2,i.canBeMerged="screen"===i.params.type&&null==i.params.stippleLength,i}return r(e,t),e.prototype.setColor=function(t){this.params.color=t,this.notifyDirty("matChanged")},e.prototype.getColor=function(){return this.params.color},e.prototype.dispose=function(){},e.prototype.getParams=function(){return this.params},e.prototype.getParameterValues=function(){var t=this.params,e=t.color,r=t.width,i=t.type,n=t.join,a=t.polygonOffset,o=t.miterLimit,s=t.stippleLength;return{color:e,width:r,type:i,join:n,polygonOffset:a,miterLimit:o,stippleLength:s}},e.prototype.setParameterValues=function(t){for(var e in t)s.assert("type"!==e,"RibbonLineMaterial: type cannot be changed after creation"),s.assert("stippleLength"!==e||null!=t[e]==(null!=this.params[e]),"RibbonLineMaterial: stippleLength on/off cannot be changed after creation"),this.params[e]=t[e];"miter"!==this.params.join&&(this.params.miterLimit=0),this.notifyDirty("matChanged")},e.prototype.getOutputAmount=function(t){var e=t/2+1,r=(e-2)*this.numVertsAtJoin+2*this.numVertsAtCap;return this.canBeMerged&&(r+=2),r*c.getStride(I)/4},e.prototype.getInstanceBufferLayout=function(){},e.prototype.getVertexBufferLayout=function(){return"wall"===this.params.type?C:I},e.prototype.fillInterleaved=function(t,e,r,i,n,a){var o=t.vertexAttr[s.VertexAttrConstants.POSITION].data,p=t.vertexAttr[s.VertexAttrConstants.COLOR]?t.vertexAttr[s.VertexAttrConstants.COLOR].data:L,l=t.vertexAttr[s.VertexAttrConstants.SIZE]?t.vertexAttr[s.VertexAttrConstants.SIZE].data:b,f=t.indices&&t.indices[s.VertexAttrConstants.POSITION];f&&f.length!==2*(o.length/3-1)&&console.warn("RibbonLineMaterial does not support indices"),"wall"===this.params.type?this.fillWithoutAuxpos(o,e,n,a):this.fillWithAuxpos(o,p,l,e,n,a)},e.prototype.intersect=function(t,e,r,i,n,a,o,l){if(i.isSelection&&!f.isAllHidden(e.componentVisibilities,t.data.componentOffsets)){for(var m,d,c,u=t.getData(),h=u.getVertexAttr()[s.VertexAttrConstants.POSITION].data,g=u.getVertexAttr()[s.VertexAttrConstants.SIZE],y=g&&g.data[0],v=y+this.params.width,L=Number.MAX_VALUE,b=i.camera,M=i.point,C=0;C<h.length-5;C+=3){if(A[0]=h[C],A[1]=h[C+1],A[2]=h[C+2],p.mat4d.multiplyVec3(r,A),P[0]=h[C+3],P[1]=h[C+4],P[2]=h[C+5],p.mat4d.multiplyVec3(r,P),b.projectPoint(A,w),b.projectPoint(P,O),w[2]<0&&O[2]>0)p.vec3d.subtract(A,P,S),m=b.frustumPlanes,d=-(p.vec3d.dot(m[4],A)+m[4][3]),c=d/p.vec3d.dot(S,m[4]),p.vec3d.scale(S,c,S),p.vec3d.add(A,S,A),b.projectPoint(A,w);else if(w[2]>0&&O[2]<0)p.vec3d.subtract(P,A,S),m=b.frustumPlanes,d=-(p.vec3d.dot(m[4],P)+m[4][3]),c=d/p.vec3d.dot(S,m[4]),p.vec3d.scale(S,c,S),p.vec3d.add(P,S,P),b.projectPoint(P,O);else if(w[2]<0&&O[2]<0)continue;var I=s.pointLineSegmentDistance2D(w,O,M);L>I&&(L=I,p.vec3d.set(A,V),p.vec3d.set(P,E))}var R=4,U=i.p0,D=i.p1;if(v/2+R>L){var T=s.lineSegmentLineSegmentDistance3D(V,E,U,D),B=Number.MAX_VALUE;if(T[0]){var N=T[2];p.vec3d.subtract(N,U,x);var j=p.vec3d.length(x);B=j/p.vec3d.dist(U,D)}o(B,x)}}},e.prototype.getGLMaterials=function(){return{color:y,depthShadowMap:void 0,normal:void 0,depth:void 0,highlight:v}},e.prototype.getAllTextureIds=function(){return[]},e.prototype.fillWithAuxpos=function(t,e,r,i,n,a){var o=t.length/3,s=t[0],p=t[1],l=t[2],f=0,m=a,d=c.getStride(this.getVertexBufferLayout())/4;this.canBeMerged&&(a+=d),i&&(s=i[0]*s+i[4]*p+i[8]*l+i[12],p=i[1]*s+i[5]*p+i[9]*l+i[13],l=i[2]*s+i[6]*p+i[10]*l+i[14]);var u=s,h=p,g=l,y=t[3],v=t[4],L=t[5];i&&(y=i[0]*y+i[4]*v+i[8]*L+i[12],v=i[1]*y+i[5]*v+i[9]*L+i[13],L=i[2]*y+i[6]*v+i[10]*L+i[14]);for(var b=0;o>b;b++){var A=3*b;o-1>b&&(y=t[A+3],v=t[A+4],L=t[A+5],i&&(y=i[0]*y+i[4]*v+i[8]*L+i[12],v=i[1]*y+i[5]*v+i[9]*L+i[13],L=i[2]*y+i[6]*v+i[10]*L+i[14])),f+=Math.sqrt((u-s)*(u-s)+(h-p)*(h-p)+(g-l)*(g-l)),n[a++]=u,n[a++]=h,n[a++]=g,n[a++]=f,n[a++]=0===b?-1.2:-1,n[a++]=s,n[a++]=p,n[a++]=l,n[a++]=y,n[a++]=v,n[a++]=L,n[a++]=e[0],n[a++]=e[1],n[a++]=e[2],n[a++]=e[3],n[a++]=r[0],n[a++]=u,n[a++]=h,n[a++]=g,n[a++]=f,n[a++]=0===b?1.2:1,n[a++]=s,n[a++]=p,n[a++]=l,n[a++]=y,n[a++]=v,n[a++]=L,n[a++]=e[0],n[a++]=e[1],n[a++]=e[2],n[a++]=e[3],n[a++]=r[0],b>0&&o-1>b&&(n[a++]=u,n[a++]=h,n[a++]=g,n[a++]=f,n[a++]=-1.2,n[a++]=s,n[a++]=p,n[a++]=l,n[a++]=y,n[a++]=v,n[a++]=L,n[a++]=e[0],n[a++]=e[1],n[a++]=e[2],n[a++]=e[3],n[a++]=r[0],n[a++]=u,n[a++]=h,n[a++]=g,n[a++]=f,n[a++]=1.2,n[a++]=s,n[a++]=p,n[a++]=l,n[a++]=y,n[a++]=v,n[a++]=L,n[a++]=e[0],n[a++]=e[1],n[a++]=e[2],n[a++]=e[3],n[a++]=r[0]),s=u,p=h,l=g,u=y,h=v,g=L}if(this.canBeMerged){for(var b=m;m+d>b;b++)n[b]=n[b+d];for(var P=a-d,b=0;d>b;b++)n[a++]=n[P++]}},e.prototype.fillWithoutAuxpos=function(t,e,r,i){for(var n,a,o,s=t.length/3,p=0,l=t[0],f=t[1],m=t[2],d=0;s>d;d++){var c=3*d;n=l,a=f,o=m,l=t[c],f=t[c+1],m=t[c+2],e&&(l=e[0]*l+e[4]*f+e[8]*m+e[12],f=e[1]*l+e[5]*f+e[9]*m+e[13],m=e[2]*l+e[6]*f+e[10]*m+e[14]),p+=Math.sqrt((l-n)*(l-n)+(f-a)*(f-a)+(m-o)*(m-o)),r[i++]=l,r[i++]=f,r[i++]=m,r[i++]=p,r[i++]=-1,r[i++]=l,r[i++]=f,r[i++]=m,r[i++]=p,r[i++]=1}},e.loadShaders=function(t,e,r,n){t._parse(i);var a=function(t){t.addDefine("Screen","SCREENSCALE"),t.addDefine("Strip","STRIP"),t.addDefine("Wall","WALL"),t.addDefine("Stipple","STIPPLE")},o=new d("ribbon-line",["vsRibbonLine","fsRibbonLine"],null,r,e,t,n);a(o),r.addShaderVariations(u,o);var s=new d("ribbon-line",["vsRibbonLine","fsRibbonLineHighlight"],null,r,e,t,n);a(s),r.addShaderVariations(h,s)},e}(a.MaterialBase),y=function(t){function e(e,r){var i=t.call(this,e,r)||this;return i.params=n.copyParameters(e.getParams()),delete i.params.join,i.program=r.getShaderVariationsProgram(u,["screen"===i.params.type,"strip"===i.params.type,"wall"===i.params.type,null!=i.params.stippleLength]),i}return r(e,t),e.prototype.updateParameters=function(){var t=this.material.getParams(),e=this.params;e.polygonOffset=t.polygonOffset,e.color=t.color,e.width=t.width,e.miterLimit="miter"===t.join?t.miterLimit:0,e.stippleLength=t.stippleLength},e.prototype.beginSlot=function(t){return t===l.TRANSPARENT_MATERIAL},e.prototype.getProgram=function(){return this.program},e.prototype.bind=function(t,e){var r=this,i=r.program,n=r.params;if(t.bindProgram(i),i.setUniform4fv("eColor",n.color),i.setUniform1f("miterLimit",n.miterLimit),i.setUniform1f("nearPlane",e.nearFar[0]),"screen"===n.type?(i.setUniform2fv("screenSize",[e.viewport[2],e.viewport[3]]),i.setUniform1f("extLineWidth",n.width*e.pixelRatio)):i.setUniform1f("extLineWidth",n.width),null!=n.stippleLength){var a=n.stippleLength?1/(2*n.stippleLength):0;i.setUniform1f("stippleLengthDoubleInv",a)}n.polygonOffset&&(t.setPolygonOffsetFillEnabled(!0),t.setPolygonOffset(0,-4)),t.setFaceCullingEnabled(!1),t.setBlendingEnabled(!0),t.setBlendFunctionSeparate(t.gl.SRC_ALPHA,t.gl.ONE_MINUS_SRC_ALPHA,t.gl.ONE,t.gl.ONE_MINUS_SRC_ALPHA),t.setDepthTestEnabled(!0),t.setDepthWriteEnabled(n.color[3]>=1)},e.prototype.release=function(t){this.params.polygonOffset&&t.setPolygonOffsetFillEnabled(!1),t.setBlendingEnabled(!1),t.setDepthWriteEnabled(!0)},e.prototype.bindView=function(t,e){n.bindView(e.origin,e.view,this.program)},e.prototype.bindInstance=function(t,e){this.program.setUniformMatrix4fv("model",e.transformation)},e.prototype.getDrawMode=function(t){var e=t.gl;return e.TRIANGLE_STRIP},e}(o.GLMaterialBase),v=function(t){function e(e,r){var i=t.call(this,e,r)||this;return i.params=n.copyParameters(e.getParams()),delete i.params.join,i.program=r.getShaderVariationsProgram(h,["screen"===i.params.type,"strip"===i.params.type,"wall"===i.params.type,null!=i.params.stippleLength]),i}return r(e,t),e.prototype.updateParameters=function(){var t=this.material.getParams(),e=this.params;e.polygonOffset=t.polygonOffset,e.color=t.color,e.width=t.width,e.miterLimit="miter"===t.join?t.miterLimit:0,e.stippleLength=t.stippleLength},e.prototype.beginSlot=function(t){return t===l.OPAQUE_MATERIAL},e.prototype.getProgram=function(){return this.program},e.prototype.bind=function(t,e){var r=this,i=r.program,n=r.params;if(t.bindProgram(i),i.setUniform4fv("eColor",n.color),i.setUniform1f("miterLimit",n.miterLimit),i.setUniform1f("nearPlane",e.nearFar[0]),"screen"===n.type?(i.setUniform2fv("screenSize",[e.viewport[2],e.viewport[3]]),i.setUniform1f("extLineWidth",n.width*e.pixelRatio)):i.setUniform1f("extLineWidth",n.width),null!=n.stippleLength){var a=n.stippleLength?1/(2*n.stippleLength):0;i.setUniform1f("stippleLengthDoubleInv",a)}n.polygonOffset&&(t.setPolygonOffsetFillEnabled(!0),t.setPolygonOffset(0,-4)),t.setFaceCullingEnabled(!1),t.setDepthTestEnabled(!0),t.setDepthWriteEnabled(n.color[3]>=1)},e.prototype.release=function(t){this.params.polygonOffset&&t.setPolygonOffsetFillEnabled(!1),t.setDepthWriteEnabled(!0)},e.prototype.bindView=function(t,e){n.bindView(e.origin,e.view,this.program)},e.prototype.bindInstance=function(t,e){this.program.setUniformMatrix4fv("model",e.transformation)},e.prototype.getDrawMode=function(t){var e=t.gl;return e.TRIANGLE_STRIP},e}(o.GLMaterialBase),L=[255,255,255,255],b=[0,0,0,0],A=p.vec3d.create(),P=p.vec3d.create(),S=p.vec3d.create(),x=p.vec3d.create(),w=p.vec2d.create(),O=p.vec2d.create(),V=p.vec3d.create(),E=p.vec3d.create(),M={color:[1,1,1,1],width:0,type:"screen",join:"miter",miterLimit:5,polygonOffset:!1,stippleLength:null},C=m.Pos3Tex,I=[{name:"position",count:3,type:5126,offset:0,stride:64,normalized:!1},{name:"uv0",count:2,type:5126,offset:12,stride:64,normalized:!1},{name:"auxpos1",count:3,type:5126,offset:20,stride:64,normalized:!1},{name:"auxpos2",count:3,type:5126,offset:32,stride:64,normalized:!1},{name:"color",count:4,type:5126,offset:44,stride:64,normalized:!1},{name:"size",count:1,type:5126,offset:60,stride:64,normalized:!1}];return g});