// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.6/esri/copyright.txt for details.

define(["require","exports","../../../../core/tsSupport/extendsHelper","dojo/text!./RibbonLineMaterial.xml","../../../../core/Logger","../lib/ComponentUtils","../lib/DefaultVertexBufferLayouts","../lib/gl-matrix","../lib/GLMaterial","../lib/Material","../lib/RenderSlot","../lib/ShaderVariations","../lib/Util","./internal/MaterialUtil","../../../webgl/Util"],function(e,t,r,i,n,a,o,s,p,l,c,d,f,m,u){var g=f.VertexAttrConstants,h="ribbon-line-material-shader-variations",v="ribbon-line-material-highlight-shader-variations",y=n.getLogger("esri.views.3d.webgl-engine.materials.RibbonLineMaterial"),b=function(e){function t(t,r){var i=e.call(this,r)||this;return i.params=m.copyParameters(t,_),"miter"!==i.params.join&&(i.params.miterLimit=0),i.numVertsAtJoin="wall"===i.params.type?2:4,i.numVertsAtCap=2,i.canBeMerged="screen"===i.params.type&&null==i.params.stippleLength,i}return r(t,e),t.prototype.setColor=function(e){this.params.color=e,this.notifyDirty("matChanged")},t.prototype.getColor=function(){return this.params.color},t.prototype.dispose=function(){},t.prototype.getParams=function(){return this.params},t.prototype.getParameterValues=function(){var e=this.params;return{color:e.color,width:e.width,type:e.type,join:e.join,polygonOffset:e.polygonOffset,miterLimit:e.miterLimit,stippleLength:e.stippleLength}},t.prototype.setParameterValues=function(e){for(var t in e)f.assert("type"!==t,"RibbonLineMaterial: type cannot be changed after creation"),f.assert("stippleLength"!==t||null!=e[t]==(null!=this.params[t]),"RibbonLineMaterial: stippleLength on/off cannot be changed after creation"),this.params[t]=e[t];"miter"!==this.params.join&&(this.params.miterLimit=0),this.notifyDirty("matChanged")},t.prototype.getOutputAmount=function(e){var t=e/2+1,r=(t-2)*this.numVertsAtJoin+2*this.numVertsAtCap;return this.canBeMerged&&(r+=2),r*u.getStride(z)/4},t.prototype.getInstanceBufferLayout=function(){},t.prototype.getVertexBufferLayout=function(){return"wall"===this.params.type?B:z},t.prototype.fillInterleaved=function(e,t,r,i,n,a){var o=e.vertexAttr[g.POSITION].data,s=e.vertexAttr[g.COLOR]?e.vertexAttr[g.COLOR].data:S,p=e.vertexAttr[g.SIZE]?e.vertexAttr[g.SIZE].data:A,l=e.indices&&e.indices[g.POSITION];l&&l.length!==2*(o.length/3-1)&&console.warn("RibbonLineMaterial does not support indices"),"wall"===this.params.type?this.fillWithoutAuxpos(o,t,n,a):this.fillWithAuxpos(o,s,p,t,n,a)},t.prototype.intersect=function(e,t,r,i,n,o,p,l){if(i.isSelection&&!a.isAllHidden(t.componentVisibilities,e.data.componentOffsets)){if(!f.isTranslationMatrix(r))return void y.error("intersection assumes a translation-only matrix");var c=e.getData(),d=c.getVertexAttr()[g.POSITION].data,m=c.getVertexAttr()[g.SIZE],u=m&&m.data[0],h=i.camera,v=i.point,b=u+this.params.width,L=b/2+4;s.vec3d.set3(v[0]-L,v[1]+L,0,V[0]),s.vec3d.set3(v[0]+L,v[1]+L,0,V[1]),s.vec3d.set3(v[0]+L,v[1]-L,0,V[2]),s.vec3d.set3(v[0]-L,v[1]-L,0,V[3]);for(var P=0;P<4;P++)h.unprojectPoint(V[P],C[P]);f.point2plane(h.eye,C[0],C[1],T),f.point2plane(h.eye,C[1],C[2],j),f.point2plane(h.eye,C[2],C[3],N),f.point2plane(h.eye,C[3],C[0],W);for(var S=Number.MAX_VALUE,P=0;P<d.length-5;P+=3)if(w[0]=d[P]+r[12],w[1]=d[P+1]+r[13],w[2]=d[P+2]+r[14],x[0]=d[P+3]+r[12],x[1]=d[P+4]+r[13],x[2]=d[P+5]+r[14],!(f.planeDistance(w,T)<0&&f.planeDistance(x,T)<0||f.planeDistance(w,j)<0&&f.planeDistance(x,j)<0||f.planeDistance(w,N)<0&&f.planeDistance(x,N)<0||f.planeDistance(w,W)<0&&f.planeDistance(x,W)<0)){if(h.projectPoint(w,D),h.projectPoint(x,M),D[2]<0&&M[2]>0){s.vec3d.subtract(w,x,O);var A=h.frustumPlanes,_=-(s.vec3d.dot(A[4],w)+A[4][3]),B=_/s.vec3d.dot(O,A[4]);s.vec3d.scale(O,B,O),s.vec3d.add(w,O,w),h.projectPoint(w,D)}else if(D[2]>0&&M[2]<0){s.vec3d.subtract(x,w,O);var A=h.frustumPlanes,_=-(s.vec3d.dot(A[4],x)+A[4][3]),B=_/s.vec3d.dot(O,A[4]);s.vec3d.scale(O,B,O),s.vec3d.add(x,O,x),h.projectPoint(x,M)}else if(D[2]<0&&M[2]<0)continue;var z=f.pointLineSegmentDistanceSquared2D(D,M,v);z<S&&(S=z,s.vec3d.set(w,R),s.vec3d.set(x,I))}var F=i.p0,H=i.p1;if(S<L*L){var q=f.lineLineDistanceSquared3D(R,I,F,H,U),G=Number.MAX_VALUE;if(q.success){s.vec3d.subtract(q.pa,F,E);var Z=s.vec3d.length(E);s.vec3d.scale(E,1/Z),G=Z/s.vec3d.dist(F,H)}p(G,E)}}},t.prototype.getGLMaterials=function(){return{color:L,depthShadowMap:void 0,normal:void 0,depth:void 0,highlight:P}},t.prototype.getAllTextureIds=function(){return[]},t.prototype.fillWithAuxpos=function(e,t,r,i,n,a){var o=e.length/3,s=e[0],p=e[1],l=e[2],c=0,d=a,f=u.getStride(this.getVertexBufferLayout())/4;this.canBeMerged&&(a+=f),i&&(s=i[0]*s+i[4]*p+i[8]*l+i[12],p=i[1]*s+i[5]*p+i[9]*l+i[13],l=i[2]*s+i[6]*p+i[10]*l+i[14]);var m=s,g=p,h=l,v=e[3],y=e[4],b=e[5];i&&(v=i[0]*v+i[4]*y+i[8]*b+i[12],y=i[1]*v+i[5]*y+i[9]*b+i[13],b=i[2]*v+i[6]*y+i[10]*b+i[14]);for(var L=0;L<o;L++){var P=3*L;L<o-1&&(v=e[P+3],y=e[P+4],b=e[P+5],i&&(v=i[0]*v+i[4]*y+i[8]*b+i[12],y=i[1]*v+i[5]*y+i[9]*b+i[13],b=i[2]*v+i[6]*y+i[10]*b+i[14])),c+=Math.sqrt((m-s)*(m-s)+(g-p)*(g-p)+(h-l)*(h-l)),n[a++]=m,n[a++]=g,n[a++]=h,n[a++]=c,n[a++]=0===L?-1.2:-1,n[a++]=s,n[a++]=p,n[a++]=l,n[a++]=v,n[a++]=y,n[a++]=b,n[a++]=t[0],n[a++]=t[1],n[a++]=t[2],n[a++]=t[3],n[a++]=r[0],n[a++]=m,n[a++]=g,n[a++]=h,n[a++]=c,n[a++]=0===L?1.2:1,n[a++]=s,n[a++]=p,n[a++]=l,n[a++]=v,n[a++]=y,n[a++]=b,n[a++]=t[0],n[a++]=t[1],n[a++]=t[2],n[a++]=t[3],n[a++]=r[0],L>0&&L<o-1&&(n[a++]=m,n[a++]=g,n[a++]=h,n[a++]=c,n[a++]=-1.2,n[a++]=s,n[a++]=p,n[a++]=l,n[a++]=v,n[a++]=y,n[a++]=b,n[a++]=t[0],n[a++]=t[1],n[a++]=t[2],n[a++]=t[3],n[a++]=r[0],n[a++]=m,n[a++]=g,n[a++]=h,n[a++]=c,n[a++]=1.2,n[a++]=s,n[a++]=p,n[a++]=l,n[a++]=v,n[a++]=y,n[a++]=b,n[a++]=t[0],n[a++]=t[1],n[a++]=t[2],n[a++]=t[3],n[a++]=r[0]),s=m,p=g,l=h,m=v,g=y,h=b}if(this.canBeMerged){for(var L=d;L<d+f;L++)n[L]=n[L+f];for(var S=a-f,L=0;L<f;L++)n[a++]=n[S++]}},t.prototype.fillWithoutAuxpos=function(e,t,r,i){for(var n,a,o,s=e.length/3,p=0,l=e[0],c=e[1],d=e[2],f=0;f<s;f++){var m=3*f;n=l,a=c,o=d,l=e[m],c=e[m+1],d=e[m+2],t&&(l=t[0]*l+t[4]*c+t[8]*d+t[12],c=t[1]*l+t[5]*c+t[9]*d+t[13],d=t[2]*l+t[6]*c+t[10]*d+t[14]),p+=Math.sqrt((l-n)*(l-n)+(c-a)*(c-a)+(d-o)*(d-o)),r[i++]=l,r[i++]=c,r[i++]=d,r[i++]=p,r[i++]=-1,r[i++]=l,r[i++]=c,r[i++]=d,r[i++]=p,r[i++]=1}},t.loadShaders=function(e,t,r){e._parse(i);var n=function(e){e.addDefine("Screen","SCREENSCALE"),e.addDefine("Strip","STRIP"),e.addDefine("Wall","WALL"),e.addDefine("Stipple","STIPPLE")},a=new d("ribbon-line",["vsRibbonLine","fsRibbonLine"],null,t,e,r);n(a),t.addShaderVariations(h,a);var o=new d("ribbon-line",["vsRibbonLine","fsRibbonLineHighlight"],null,t,e,r);n(o),t.addShaderVariations(v,o)},t}(l),L=function(e){function t(t,r){var i=e.call(this,t,r)||this;return i.params=m.copyParameters(t.getParams()),delete i.params.join,i.program=r.getShaderVariationsProgram(h,["screen"===i.params.type,"strip"===i.params.type,"wall"===i.params.type,null!=i.params.stippleLength]),i}return r(t,e),t.prototype.updateParameters=function(){var e=this.material.getParams(),t=this.params;t.polygonOffset=e.polygonOffset,t.color=e.color,t.width=e.width,t.miterLimit="miter"===e.join?e.miterLimit:0,t.stippleLength=e.stippleLength},t.prototype.beginSlot=function(e){return e===c.TRANSPARENT_MATERIAL},t.prototype.getProgram=function(){return this.program},t.prototype.bind=function(e,t){var r=this,i=r.program,n=r.params;if(e.bindProgram(i),i.setUniform4fv("eColor",n.color),i.setUniform1f("miterLimit",n.miterLimit),i.setUniform1f("nearPlane",t.nearFar[0]),"screen"===n.type?(i.setUniform2fv("screenSize",[t.viewport[2],t.viewport[3]]),i.setUniform1f("extLineWidth",n.width*t.pixelRatio)):i.setUniform1f("extLineWidth",n.width),null!=n.stippleLength){var a=n.stippleLength?1/(2*n.stippleLength):0;i.setUniform1f("stippleLengthDoubleInv",a)}n.polygonOffset&&(e.setPolygonOffsetFillEnabled(!0),e.setPolygonOffset(0,-4)),e.setFaceCullingEnabled(!1),e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(e.gl.SRC_ALPHA,e.gl.ONE_MINUS_SRC_ALPHA,e.gl.ONE,e.gl.ONE_MINUS_SRC_ALPHA),e.setDepthTestEnabled(!0),e.setDepthWriteEnabled(n.color[3]>=1)},t.prototype.release=function(e){this.params.polygonOffset&&e.setPolygonOffsetFillEnabled(!1),e.setBlendingEnabled(!1),e.setDepthWriteEnabled(!0)},t.prototype.bindView=function(e,t){m.bindView(t.origin,t.view,this.program)},t.prototype.bindInstance=function(e,t){this.program.setUniformMatrix4fv("model",t.transformation)},t.prototype.getDrawMode=function(e){return e.gl.TRIANGLE_STRIP},t}(p),P=function(e){function t(t,r){var i=e.call(this,t,r)||this;return i.params=m.copyParameters(t.getParams()),delete i.params.join,i.program=r.getShaderVariationsProgram(v,["screen"===i.params.type,"strip"===i.params.type,"wall"===i.params.type,null!=i.params.stippleLength]),i}return r(t,e),t.prototype.updateParameters=function(){var e=this.material.getParams(),t=this.params;t.polygonOffset=e.polygonOffset,t.color=e.color,t.width=e.width,t.miterLimit="miter"===e.join?e.miterLimit:0,t.stippleLength=e.stippleLength},t.prototype.beginSlot=function(e){return e===c.OPAQUE_MATERIAL},t.prototype.getProgram=function(){return this.program},t.prototype.bind=function(e,t){var r=this,i=r.program,n=r.params;if(e.bindProgram(i),i.setUniform4fv("eColor",n.color),i.setUniform1f("miterLimit",n.miterLimit),i.setUniform1f("nearPlane",t.nearFar[0]),"screen"===n.type?(i.setUniform2fv("screenSize",[t.viewport[2],t.viewport[3]]),i.setUniform1f("extLineWidth",n.width*t.pixelRatio)):i.setUniform1f("extLineWidth",n.width),null!=n.stippleLength){var a=n.stippleLength?1/(2*n.stippleLength):0;i.setUniform1f("stippleLengthDoubleInv",a)}n.polygonOffset&&(e.setPolygonOffsetFillEnabled(!0),e.setPolygonOffset(0,-4)),e.setFaceCullingEnabled(!1),e.setDepthTestEnabled(!0),e.setDepthWriteEnabled(n.color[3]>=1)},t.prototype.release=function(e){this.params.polygonOffset&&e.setPolygonOffsetFillEnabled(!1),e.setDepthWriteEnabled(!0)},t.prototype.bindView=function(e,t){m.bindView(t.origin,t.view,this.program)},t.prototype.bindInstance=function(e,t){this.program.setUniformMatrix4fv("model",t.transformation)},t.prototype.getDrawMode=function(e){return e.gl.TRIANGLE_STRIP},t}(p),S=[255,255,255,255],A=[0,0,0,0],w=s.vec3d.create(),x=s.vec3d.create(),O=s.vec3d.create(),E=s.vec3d.create(),D=s.vec3d.create(),M=s.vec3d.create(),R=s.vec3d.create(),I=s.vec3d.create(),U={success:!1,dist2:0,pa:s.vec3d.create(),pb:s.vec3d.create()},V=[s.vec3d.create(),s.vec3d.create(),s.vec3d.create(),s.vec3d.create()],C=[s.vec3d.create(),s.vec3d.create(),s.vec3d.create(),s.vec3d.create()],T=s.vec4d.create(),j=s.vec4d.create(),N=s.vec4d.create(),W=s.vec4d.create(),_={color:[1,1,1,1],width:0,type:"screen",join:"miter",miterLimit:5,polygonOffset:!1,stippleLength:null},B=o.Pos3Tex,z=[{name:"position",count:3,type:5126,offset:0,stride:64,normalized:!1},{name:"uv0",count:2,type:5126,offset:12,stride:64,normalized:!1},{name:"auxpos1",count:3,type:5126,offset:20,stride:64,normalized:!1},{name:"auxpos2",count:3,type:5126,offset:32,stride:64,normalized:!1},{name:"color",count:4,type:5126,offset:44,stride:64,normalized:!1},{name:"size",count:1,type:5126,offset:60,stride:64,normalized:!1}];return b});