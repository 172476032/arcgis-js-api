// COPYRIGHT Â© 2017 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.6/esri/copyright.txt for details.

define(["require","exports","../../../webgl/BufferObject","./FreeList","./enums"],function(e,t,r,i,n){var o=1.5,a=function(){function e(){this._bufferSpec={},this._vbFreeList=null,this._ibFreeList=null,this.vertexBufferMap={},this.vertexBufferMapCPU={},this.indexBuffer=null,this.indexBufferCPU=null,this.vao=null,this.usage=35044}return Object.defineProperty(e.prototype,"attached",{get:function(){return null!==this.indexBuffer},enumerable:!0,configurable:!0}),e.prototype.attach=function(e){for(var t in this._bufferSpec){var i=this.vertexBufferMapCPU[t];this.vertexBufferMap[t]=r.createVertex(e.context,this.usage,i.buffer)}return this.indexBufferCPU&&(this.indexBuffer=r.createIndex(e.context,this.usage,this.indexBufferCPU)),!0},e.prototype.initializeEmpty=function(e,t,r,n){void 0===n&&(n=35044),this.clear(),this.usage=n,r&&(this.indexBufferCPU=new Uint32Array(r));for(var o,a=0,f=e;a<f.length;a++){var s=f[a];o=0!==s.divisor?Math.ceil(t/s.divisor):t;var u=o*s.strideInBytes;this._bufferSpec[s.name]=s,this.vertexBufferMapCPU[s.name]=new Uint32Array(u/4)}this._vbFreeList=i.create(t),r&&(this._ibFreeList=i.create(r))},e.prototype.initializeWithRecords=function(e,t,r){void 0===r&&(r=35044),t.sort(function(e,t){return e.sortKey-t.sortKey});for(var i=0,n=0,a=0,f=t;a<f.length;a++){var s=f[a];i+=s.meshData.vertexCount,s.meshData.indexData&&(n+=s.meshData.indexData.length),s.indexFrom=void 0,s.indexCount=0,s.vertexFrom=void 0,s.vertexCount=0}this.initializeEmpty(e,Math.floor(i*o),Math.floor(n*o),r),this.update(t)},e.prototype.initializeWithBuffers=function(e,t,r){void 0===r&&(r=35044),this.clear(),this.usage=r,this.indexBufferCPU=t.indexBuffer;for(var n=this.indexBufferCPU.length,o=void 0,a=0,f=e;a<f.length;a++){var s=f[a];this._bufferSpec[s.name]=s,this.vertexBufferMapCPU[s.name]=t.vertexBuffer[s.name].data;var u=t.vertexBuffer[s.name].data.buffer.byteLength/s.strideInBytes;void 0!==o&&o!==u?console.error("Buffers with different vertex counts."):o=u}this._vbFreeList=i.create(o),this._vbFreeList.allocate(o),this._ibFreeList=i.create(n),this._ibFreeList.allocate(n)},e.prototype.clear=function(){this.indexBuffer&&(this.indexBuffer.dispose(),this.indexBuffer=null),this.indexBufferCPU=null;for(var e in this.vertexBufferMap)this.vertexBufferMap[e].dispose(),delete this.vertexBufferMap[e];this.vertexBufferMap={},this.vertexBufferMapCPU={},this.vao&&(this.vao.dispose(),this.vao=null),this._bufferSpec={},this._vbFreeList=null,this._ibFreeList=null},e.prototype.update=function(e){for(var t=0,r=e;t<r.length;t++){var i=r[t],o=this._updateRecord(i);if(o!==n.WGLGeometryTransactionStatus.SUCCEEDED)return o}return n.WGLGeometryTransactionStatus.SUCCEEDED},e.prototype._updateRecord=function(e){var t;void 0===e.vertexFrom||e.vertexCount!==e.meshData.vertexCount?(void 0!==e.vertexFrom&&this._vbFreeList.free(e.vertexFrom,e.vertexCount),t=e.meshData.vertexCount>0?this._vbFreeList.allocate(e.meshData.vertexCount):-1):t=e.vertexFrom,-1!==t?(e.vertexFrom=t,e.vertexCount=e.meshData.vertexCount):(e.vertexFrom=void 0,e.vertexCount=0);var r=e.meshData.indexData?e.meshData.indexData.length:0;if(void 0===e.indexFrom||e.indexCount!==r?(void 0!==e.indexFrom&&this._ibFreeList.free(e.indexFrom,e.indexCount),t=r>0?this._ibFreeList.allocate(r):-1):t=e.indexFrom,-1!==t?(e.indexFrom=t,e.indexCount=r):(e.indexFrom=void 0,e.indexCount=0),void 0!==e.vertexFrom&&void 0!==e.indexFrom){var i,o=void 0,a=void 0,f=void 0,s=void 0;for(var u in e.meshData.vertexData){o=this._bufferSpec[u].divisor,i=0!==o?e.vertexFrom/o:e.vertexFrom,a=this.vertexBufferMapCPU[u],f=e.meshData.vertexData[u];var v=f.length;s=i*this._bufferSpec[u].strideInBytes/4;for(var h=0;v>h;h++)a[s+h]=f[h]}for(var x=e.vertexFrom,d=e.meshData.indexData,l=d?d.length:0,p=0;l>p;++p)this.indexBufferCPU[e.indexFrom+p]=x+d[p];return n.WGLGeometryTransactionStatus.SUCCEEDED}return n.WGLGeometryTransactionStatus.FAILED_OUT_OF_MEMORY},e.prototype.remove=function(e){for(var t=0,r=e;t<r.length;t++){var i=r[t];this._removeRecord(i)}},e.prototype._removeRecord=function(e){this._vbFreeList.free(e.vertexFrom,e.vertexCount),e.vertexFrom=void 0,e.vertexCount=0,this._ibFreeList.free(e.indexFrom,e.indexCount),e.indexFrom=void 0,e.indexCount=0},e.prototype.invalidateIndexBuffer=function(){var e=this.indexBuffer;if(e){var t=this.indexBufferCPU;e.setData(t)}},e.prototype.invalidateVertexBuffers=function(e){if(!e){e=[];for(var t in this.vertexBufferMap)e.push(t)}for(var r=0,i=e;r<i.length;r++){var t=i[r],n=this.vertexBufferMap[t];if(n){var o=this.vertexBufferMapCPU[t];n.setData(o.buffer)}}},e}();return a});