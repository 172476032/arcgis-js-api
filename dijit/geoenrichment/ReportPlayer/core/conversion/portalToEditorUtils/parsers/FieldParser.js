// COPYRIGHT Â© 201 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/3.23/esri/copyright.txt for details.

// Example: <text name="Copyright" />

define(["esri/dijit/geoenrichment/utils/JsonXmlConverter","../../../supportClasses/templateJsonUtils/fieldInfo/RichTextJsonUtil","../../../supportClasses/templateJsonUtils/fieldInfo/FieldInfoBuilder","../../../supportClasses/templateJsonUtils/fieldInfo/FieldInfoFormatUtil","../../ConversionUtil","../../ShapeConverter","../../../annotations/shape/ShapeJsonUtil","./_FieldInfoBuilder","./ImageParser","./AlignParser","../../../../_devConfig"],function(e,t,r,a,n,i,o,s,l,f,g){function u(e){var t=e.attributes||{};return a.processFieldInfoTagAttributes(t),t}function m(t){return e.queryJson(t,/^d$|^text$|^reportName$|^reportTitle2/)}var d={},c={parseImageTrigger:function(e,t){var r=s.getCalculatorOrScriptFieldInfo(e.attributes.field,t);if(!r)return console.log("Parse template error => can't build fieldInfo for field "+e.attributes.field),console.log(e),null;var a={fieldInfo:r,cases:[]},n=this;return e.tags.forEach(function(e){var r="case"===e.name?e.attributes.key:"default",i=e.tags[0],o=t.processFileName(i.attributes.value);a.cases.push({compareInfos:n._getCompareInfosFromTriggerKey(r),setters:[{property:i.attributes.property,value:o}]}),t.putImageData(o)}),a},parseFieldTrigger:function(e,t,r){t.triggerJson={fieldInfo:r&&s.getCalculatorOrScriptFieldInfo(e.attributes.field,r),cases:[]};var a=this;e.tags.forEach(function(e){var r="case"===e.name?e.attributes.key:"default",n={compareInfos:a._getCompareInfosFromTriggerKey(r),setters:[]};t.triggerJson.cases.push(n),e.tags.forEach(function(e){n.setters.push({property:e.attributes.property,value:e.attributes.value})})})},_getCompareInfosFromTriggerKey:function(e){return e.split(n.KEY_INTERVAL_SEPARATOR).map(function(e){var t=n.ONE_FIELD_KEY_TEST.test(e)?e.replace(n.KEY_OPERATOR_RE,""):e;return{value:t,operator:e.substr(0,e.length-t.length)||"="}})}},p={getFieldInfo:function(e,t,a,n){var i=n.parsers.getParser("chart").portalToEditor(e,t,n);return i&&r.createFieldInfoFromChart(i)}},F={getFieldInfo:function(e,t,a,n){var i=n.parsers.getParser("infographic").portalToEditor(e,t,n);return i&&r.createFieldInfoFromInfographic(i)}},I={getFieldInfo:function(e,t,a,n){var i,o=l.getElement(e,n);return e.tags&&e.tags[0]&&"trigger"===e.tags[0].name&&(i=c.parseImageTrigger(e.tags[0],n)),r.createFieldInfoFromImage(o,i)}},h={getFieldInfo:function(e,t,a,n){var s=i.svgJsonToShapeObject(e),l=i.getStylesFromSvgJson(e),g=o.createShapeJsonFromShapeObj(s,l),u=e.attributes;return g.style.angle=Number(u.angle)||0,f.parseAlign(u,g.style),r.createFieldInfoFromShape(g)}},v={getFieldInfo:function(e,t,a,n){var i=n.parsers.getParser("section").parseSection(e,n);return r.createFieldInfoFromSection(i)}},T={getFieldInfo:function(e,t,a,n,i){var o=u(e);if(t=t||o.f,i.templateJson.metadata.mapImageInfosHash[t]){var f=l.parseMapImageDField(t,i);return r.createFieldInfoFromImage(f)}var g=r.createFieldInfoFromSpecialFieldName(t,o.m);if(!g){var m;2===a.tags.length&&"#text"===a.tags[1].name&&(m=a.tags[1].text),g=s.getCalculatorOrScriptFieldInfo(t,i,{format:o.m,additionalText:m})}return g&&n&&(c.parseFieldTrigger(n,g,i),g.triggerJson&&!g.triggerJson.fieldInfo&&(g.triggerJson.fieldInfo=null,console.log("Parse template error => can't build fieldInfo for field "+n.attributes.field),console.log(n))),g}};return d.parseField=function(e,t,a,n){var i;if(g.emulateErrors.layoutParseError)throw new Error("Error test: something crashed during the parsing of the layout!");if(e){if("chart"===e.name)return p.getFieldInfo(e,t,a,n);if("infographic"===e.name)return F.getFieldInfo(e,t,a,n);if(("img"===e.name||"mapImage"===e.name)&&e.attributes)return I.getFieldInfo(e,t,a,n);if("svg"===e.name)return h.getFieldInfo(e,t,a,n);if("section"===e.name)return v.getFieldInfo(e,t,a,n);if("d"===e.name)i=T.getFieldInfo(e,null,t,a,n);else if("a"===e.name&&e.tags&&"d"===e.tags[0].name){var o=e.tags[0];i=T.getFieldInfo(o,null,t,a,n),i&&e.attributes&&e.attributes.hreff&&(i.linkFieldInfo=T.getFieldInfo(o,e.attributes.hreff,t,a,n))}else i="text"===e.name?r.createFieldInfoFromSpecialFieldName(u(e).name):r.createFieldInfoFromSpecialFieldName(e.name,u(e).m)}if(!i){var s=m(t);if(1===s.length&&s[0].attributes&&"TrialUrlText"===s[0].attributes.name)return r.createFieldInfoFromSpecialFieldName(s[0].attributes.name);i=d.parseRichTextTag(t,n)}return i},d.parseRichTextTag=function(a,n){var i,o=m(a);if(o.length){var s=[],l=[],f=!0;o.some(function(e,t){var i=e.attributes?e.attributes.name:e.name,o="d"===e.name?T.getFieldInfo(e,null,a,null,n):i&&r.createFieldInfoFromSpecialFieldName(i);if(!o)return f=!1,!0;"d"===e.name?s.push(o):l.push(o)}),f&&(i=t.createFieldInfoFromRichText(e.getInnerHTML(a),s,l))}return i},d.parseFieldTrigger=function(e,t,r){return t=t||{},c.parseFieldTrigger(e,t,r),t.triggerJson},d});