// COPYRIGHT Â© 201 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/3.26/esri/copyright.txt for details.

define(["../../kernel","./AnalysisRegistry","./RasterAnalysisMixin","./utils","dijit/_FocusMixin","dijit/_OnDijitClickMixin","dijit/_TemplatedMixin","dijit/_WidgetBase","dijit/_WidgetsInTemplateMixin","esri/layers/ArcGISImageServiceLayer","dojo/_base/array","dojo/_base/declare","dojo/_base/json","dojo/_base/lang","dojo/has","dojo/i18n!./nls/DetermineTravelCostPathAsPolyline","dojo/text!./templates/DetermineTravelCostPathAsPolyline.html"],function(t,e,i,s,n,a,r,o,u,h,p,y,l,c,d,L,_){var m=y([o,r,u,a,n,i],{declaredClass:"esri.dijit.analysis.DetermineTravelCostPathAsPolyline",templateString:_,widgetsInTemplate:!0,analysisType:"feature",map:null,drawDestinationPointLayerName:"",drawSourcePointLayerName:"",toolName:"DetermineTravelCostPathAsPolyline",helpFileName:"DetermineTravelCostPathAsPolyline",toolNlsName:L,rasterGPToolName:"DetermineTravelCostPathAsPolyline",outputName:"outputPolylineName",resultParameter:"outputPolylineFeatures",constructor:function(t,e){this._pbConnects=[],t.containerNode&&(this.container=t.containerNode)},_removePointLayer:function(){this.sourcePointLayer&&this._removeLayer(this.sourcePointLayer,this.inputLayers,this._analysisSelect),this.destinationPointLayer&&this._removeLayer(this.destinationPointLayer,this.inputLayers,this._destinationSelect),this._sourceDrawBtn.deactivate(),this._destinationDrawBtn.deactivate()},_getJobParameters:function(){var t=s.constructAnalysisInputLyrObj(this.get("inputLayer"));this.inputLayer.drawnLayer&&(t.drawnLayer=this.inputLayer.drawnLayer);var e=l.toJson(s.constructAnalysisInputLyrObj(this.get("inputCostRaster"))),i=s.constructAnalysisInputLyrObj(this.get("inputDestinationRasterOrFeatures"));return this.get("inputDestinationRasterOrFeatures").drawnLayer&&(i.drawnLayer=this.get("inputDestinationRasterOrFeatures").drawnLayer),{inputSourceRasterOrFeatures:l.toJson(t),inputCostRaster:e,inputDestinationRasterOrFeatures:l.toJson(i),pathType:this._pathTypeSelect.get("value")}},_setDefaultInputs:function(){this._addInputCostRasterLayerOptions(),this._setDefaultInputCostRaster(),this._addDestinationLayerOptions(),this._pathTypeSelect.set("value",this.pathType),this._outputLayerInput.set("value",this.outputPolylineName&&this.outputPolylineName.serviceProperties.name),this.drawDestinationPointLayerName||(this.drawDestinationPointLayerName=this.i18n.drawDestinationPointLayerName),this.drawSourcePointLayerName||(this.drawSourcePointLayerName=this.i18n.drawSourcePointLayerName),this.inputLayer&&this.inputLayer.drawnLayer&&(this._sourceDrawBtn.set("pointFeatureLayer",this.inputLayer),this.sourcePointLayer=this.inputLayer),this.inputDestinationRasterOrFeatures&&this.inputDestinationRasterOrFeatures.drawnLayer&&(this.inputLayers.push(this.inputDestinationRasterOrFeatures),this._destinationDrawBtn.set("pointFeatureLayer",this.inputDestinationRasterOrFeatures),this.destinationPointLayer=this.inputDestinationRasterOrFeatures),this._destinationDrawBtn.set("map",this.map),this._sourceDrawBtn.set("map",this.map),this._destinationDrawBtn.on("change",c.hitch(this,this._handleDestinationDrawLayer)),this._sourceDrawBtn.on("change",c.hitch(this,this._handleSourceDrawLayer))},_setDefaultInputCostRaster:function(){this.inputCostRaster||(this.inputCostRaster=this.inputCostRasters[0])},_resetUI:function(){this._addDestinationLayerOptions()},_handleSourceDrawLayer:function(t){this._clearSelectedPointSelectLayer(!0),this.inputLayers&&0!==this.inputLayers.length&&-1!==this.inputLayers.indexOf(t)||(this.sourcePointLayer=t,this.inputLayers.push(t),this.inputLayer=t,this._analysisSelect.removeOption(this._analysisSelect.getOptions()),s.populateAnalysisLayers(this,"inputLayer","inputLayers"),this._addDestinationLayerOptions())},_handleDestinationDrawLayer:function(t){if(this._clearSelectedPointSelectLayer(!1),!this.inputLayers||0===this.inputLayers.length||-1===this.inputLayers.indexOf(t)){this.destinationPointLayer=t;var e=this._updateSelectOptionsForDrawLayer(!1,t);this._handleDestinationAnalysisLayerChange(e)}},_clearSelectedPointSelectLayer:function(t){t&&this.destinationPointLayer&&this._destinationDrawBtn.reset(),!t&&this.sourcePointLayer&&this._sourceDrawBtn.reset()},_updateSelectOptionsForDrawLayer:function(t,e){var i=this.inputLayers.length,s=this._destinationSelect.getOptions();return this._destinationSelect.removeOption(s),s=p.map(s,function(t){return t.selected=!1,t}),s.push({value:i,label:e.name,selected:!0}),this.inputLayers.push(e),this._destinationSelect.addOption(s),i},_addInputCostRasterLayerOptions:function(){var t=[];this._inputCostRasterSelect.removeOption(this._inputCostRasterSelect.getOptions()),p.forEach(this.inputCostRasters,c.hitch(this,function(e,i){this._isSelected(this.inputCostRaster,this.inputLayer)||t.push({label:e.name,value:i,selected:this._isSelected(e,this.inputCostRaster)})})),this._inputCostRasterSelect.addOption(t),this._handleInputCostRasterChange(this._inputCostRasterSelect.get("value"))},_addDestinationLayerOptions:function(){var t=[];this._destinationSelect.removeOption(this._destinationSelect.getOptions()),p.forEach(this.inputLayers,c.hitch(this,function(e,i){this._isSelected(e,this.inputLayer)||this._isSelected(e,this.inputDestinationRasterOrFeatures)?this._isSelected(e,this.inputDestinationRasterOrFeatures)&&(this._isSelected(e,this.inputLayer)?this.inputDestinationRasterOrFeatures=void 0:t.push({label:e.name,value:i,selected:!0})):t.push({label:e.name,value:i,selected:!1})})),this._destinationSelect.addOption(t),this._handleDestinationAnalysisLayerChange(this._destinationSelect.get("value"))},_handleInputCostRasterChange:function(t){t>=0&&this.set("inputCostRaster",this.inputCostRasters[t])},_handleDestinationAnalysisLayerChange:function(t){t>=0&&this.set("inputDestinationRasterOrFeatures",this.inputLayers[t])},_isSelected:function(t,e){return e&&t&&e.url===t.url&&e.id===t.id},_setInputLayerAttr:function(t){this.inputLayer=t},_getInputLayerAttr:function(){return this.inputLayer},_setInputDestinationRasterOrFeaturesAttr:function(t){this.inputDestinationRasterOrFeatures=t},_getInputDestinationRasterOrFeaturesAttr:function(){return this.inputDestinationRasterOrFeatures},_setInputLayersAttr:function(t){this.inputLayers=p.filter(t,function(t){return t.geometryType===e.GeometryTypes.Point||t.geometryType===e.GeometryTypes.Line||t.geometryType===e.GeometryTypes.Polygon||t instanceof h}),this.set("inputCostRasters",t)},_getInputLayersAttr:function(t){return this.inputLayers},_getInputCostRasterAttr:function(){return this.inputCostRaster},_setInputCostRasterAttr:function(t){t instanceof h&&(this.inputCostRaster=t)},_getInputCostRastersAttr:function(){return this.inputCostRasters},_setInputCostRastersAttr:function(t){this.inputCostRasters=p.filter(t,function(t){return t instanceof h})},_setOutputPolylineNameAttr:function(t){this.outputOptimumNetworkName=t},_getOutputPolylineNameAttr:function(){return this._outputLayerInput.get("value")},_setPathTypeAttr:function(t){this.pathType=t},_getPathTypeAttr:function(){return this.pathType},_setDrawSourcePointLayerNameAttr:function(t){this.drawSourcePointLayerName=t},_getDrawSourcePointLayerNameAttr:function(){return this.drawSourcePointLayerName},_setDrawDestinationPointLayerNameAttr:function(t){this.drawDestinationPointLayerName=t},_getDrawDestinationPointLayerNameAttr:function(){return this.drawSourcePointLayerName}});return d("extend-esri")&&c.setObject("dijit.analysis.DetermineTravelCostPathAsPolyline",m,t),m});