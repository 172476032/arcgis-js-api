// COPYRIGHT Â© 2017 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.6/esri/copyright.txt for details.

define(["require","exports","../core/tsSupport/declareExtendsHelper","../core/tsSupport/decorateHelper","../core/accessorSupport/decorators","./Layer","./FeatureLayer","./support/Field","./support/fieldUtils","./support/LabelClass","../symbols/support/ElevationInfo","./support/labelingInfo","./support/FeatureReduction","./mixins/SceneService","./support/commonProperties","../PopupTemplate","../request","../core/requireUtils","../core/promiseUtils","../core/urlUtils","../core/Error","../core/Logger","../core/accessorSupport/PropertyOrigin","../core/accessorSupport/utils","../renderers/support/jsonUtils","../renderers/support/styleUtils","../renderers/support/typeUtils","../portal/PortalItem","../tasks/support/Query","dojo/_base/lang","dojo/promise/all"],function(e,r,t,o,n,i,a,s,p,l,u,d,y,c,f,h,m,v,g,b,I,w,F,L,S,j,_,E,C,P,R){function O(e,r,t){return e&&(e=S.read(e,r,t)||void 0,e||U.error("Failed to create renderer",{rendererDefinition:e,layer:this,context:t})),e}var T=["3DObject","Point"],U=w.getLogger("esri.layers.SceneLayer"),D=function(r){function i(e,t){var o=r.call(this)||this;return o.featureReduction=null,o.operationalLayerType="ArcGISSceneServiceLayer",o.type="scene",o.fields=[],o.definitionExpression=null,o.elevationInfo=null,o.labelsVisible=!1,o.labelingInfo=null,o.legendEnabled=!0,o.cachedDrawingInfo={color:!1},o.popupEnabled=!0,o.popupTemplate=null,o.objectIdField=null,o.objectIdFilter=null,o._fieldUsageInfo={},o.screenSizePerspectiveEnabled=!0,o}return t(i,r),i.prototype.normalizeCtorArgs=function(e,r){return"string"==typeof e?P.mixin({},{url:e},r):e},i.prototype.getField=function(e){return p.getField(e,this.fields)},Object.defineProperty(i.prototype,"geometryType",{get:function(){return q[this.profile]||"mesh"},enumerable:!0,configurable:!0}),i.prototype.readLabelsVisible=function(e,r){return r.showLabels},i.prototype.writeLabelsVisible=function(e,r){r.showLabels=!!e},Object.defineProperty(i.prototype,"renderer",{set:function(e){p.fixRendererFields(e,this.fields),this._set("renderer",e)},enumerable:!0,configurable:!0}),i.prototype.readCachedDrawingInfo=function(e,r){return(null==e||"object"!=typeof e)&&(e={}),null==e.color&&(e.color=!1),e},i.prototype.readPopupEnabled=function(e,r){return null!=r.disablePopup?!r.disablePopup:void 0},i.prototype.writePopupEnabled=function(e,r){e||(r.disablePopup=!0)},i.prototype.readObjectIdField=function(e,r){return!e&&r.fields&&r.fields.some(function(r){return"esriFieldTypeOID"===r.type&&(e=r.name),!!e}),e||void 0},i.prototype.readProfile=function(e,r){var t=r.store.profile;return null!=t&&x[t]?x[t]:(U.error("Unknown or missing profile",{profile:t,layer:this}),"mesh-pyramids")},i.prototype.readNormalReferenceFrame=function(e,r){return r.store.normalReferenceFrame},i.prototype.load=function(){var e=this,r=this.loadFromPortal({supportedTypes:["Scene Service"]}).always(function(){return e._fetchService()}).then(function(){return R([e._verifyRootNodeAndUpdateExtent(),e._setCompanionFeatureLayer()])}).then(function(){return e._applyCompanionOverrides()}).then(function(){return e._populateFieldUsageInfo()}).then(function(){return j.loadStyleRenderer(e,{origin:"service"})}).then(function(){return p.fixRendererFields(e.renderer,e.fields)});return this.addResolvingPromise(r),this.when()},i.prototype.createLayerView=function(r){var t,o=this;return t=null==this.profile||"mesh-pyramids"===this.profile?"../views/3d/layers/SceneLayerView3D":"../views/3d/layers/SceneLayerGraphicsView3D",v.when(e,t).then(function(e){return new e({view:r,layer:o})})},i.prototype.createQuery=function(){var e=new C;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e},i.prototype.queryExtent=function(e){var r=this;return this._getAssociatedLayerForQuery().then(function(t){return t.queryExtent(e||r.createQuery())})},i.prototype.queryFeatureCount=function(e){var r=this;return this._getAssociatedLayerForQuery().then(function(t){return t.queryFeatureCount(e||r.createQuery())})},i.prototype.queryFeatures=function(e){var r=this;return this._getAssociatedLayerForQuery().then(function(t){return t.queryFeatures(e||r.createQuery())}).then(function(e){if(e&&e.features)for(var t=0,o=e.features;t<o.length;t++){var n=o[t];n.layer=r}return e})},i.prototype.queryObjectIds=function(e){var r=this;return this._getAssociatedLayerForQuery().then(function(t){return t.queryObjectIds(e||r.createQuery())})},i.prototype.getFieldUsageInfo=function(e){return this._fieldUsageInfo[e]||{supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1}},i.prototype._getAssociatedLayerForQuery=function(){var e=this;if(!this.loaded)return this.load().then(function(){return e._getAssociatedLayerForQuery()});var r=this.associatedLayer;return null!=r?g.resolve(r):g.reject(new I("scenelayer:query-not-available","SceneLayer queries are not available without associated feature layer"))},i.prototype.hasCachedStatistics=function(e){return null!=this.statisticsInfo&&this.statisticsInfo.some(function(r){return r.name===e})},i.prototype.queryCachedStatistics=function(e){if(!this.hasCachedStatistics(e))return g.reject(new I("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available"));for(var r=0,t=this.statisticsInfo;r<t.length;r++){var o=t[r];if(o.name===e){var n=b.join(this.parsedUrl.path,o.href);return m(n,{query:{f:"json"},responseType:"json"}).then(function(e){return e.data})}}},i.prototype.graphicChanged=function(e){this.emit("graphic-update",e)},i.prototype._validateLayer=function(e){function r(e,r){var t=!1,o=!1;if(null==e)t=!0,o=!0;else{var n=r&&r.isGeographic;switch(e){case"east-north-up":case"earth-centered":t=!0,o=n;break;case"vertex-reference-frame":t=!0,o=!n;break;default:t=!1}}if(!t)throw new I("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!o)throw new I("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}if(e.layerType&&-1===T.indexOf(e.layerType))throw new I("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new I("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new I("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});r(this.normalReferenceFrame,this.spatialReference)},i.prototype._populateFieldUsageInfo=function(){if(this._fieldUsageInfo={},this.fields)for(var e=function(e){var t=!(!r.attributeStorageInfo||!r.attributeStorageInfo.some(function(r){return r.name===e.name})),o=!!(r.associatedLayer&&r.associatedLayer.fields&&r.associatedLayer.fields.some(function(r){return r&&e.name===r.name})),n={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||o,supportsLayerQuery:o};r._fieldUsageInfo[e.name]=n},r=this,t=0,o=this.fields;t<o.length;t++){var n=o[t];e(n)}},i.prototype._applyCompanionOverrides=function(){if(this.associatedLayer){if(this.associatedLayer.fields)for(var e=0,r=this.associatedLayer.fields;e<r.length;e++){var t=r[e];this.getField(t.name)||this.fields.push(t.clone())}for(var o=["popupTemplate","popupEnabled"],n=L.getProperties(this),i=0;i<o.length;i++){var a=o[i];this._buddyIsMoreImportant(a)&&(n.setDefaultOrigin(this.associatedLayer.originOf(a)),n.set(a,this.associatedLayer[a]),n.setDefaultOrigin("user"))}}},i.prototype._setCompanionFeatureLayer=function(){var e=this;return this._fetchCompanionFeatureLayer().then(function(r){e.associatedLayer=r})},i.prototype._fetchCompanionFeatureLayer=function(){var e,r=this;return-1===["mesh-pyramids","points"].indexOf(this.profile)?g.resolve(null):(e=this.portalItem&&this.portalItem.isResolved()?this._fetchCompanionFeatureLayerFromRelatedItems(this.portalItem):this._fetchCompanionFeatureLayerFromUrl(),e.then(function(e){return e.load()}).otherwise(function(e){return null==r.attributeStorageInfo?U.warn("Companion FeatureLayer could not be loaded and no binary attributes found. Popups will not work for this SceneLayer: "+r.title):U.info("Companion FeatureLayer could not be loaded. Falling back to binary attributes for Popups on this SceneLayer: "+r.title),null}))},i.prototype._fetchCompanionFeatureLayerFromRelatedItems=function(e){var r=this;return e.fetchRelatedItems({relationshipType:"Service2Data",direction:"forward"}).then(function(e){var t=e.filter(function(e){return"Feature Service"===e.type})[0];return t?r._fetchCompanionFeatureLayerFromPortalItem(new E({id:t.id,portal:t.portal})):g.reject()}).otherwise(function(){return r._fetchCompanionFeatureLayerFromUrl()})},i.prototype._fetchCompanionFeatureLayerFromPortalItem=function(e){var r=this;return e.load().then(function(e){return r._findMatchingCompanionSublayerUrl(e.url)}).then(function(r){return g.resolve(new a({url:r,portalItem:e}))})},i.prototype._fetchCompanionFeatureLayerFromUrl=function(){return this._findMatchingCompanionSublayerUrl().then(function(e){return g.resolve(new a({url:e}))})},i.prototype._findMatchingCompanionSublayerUrl=function(e){var r=this.parsedUrl.path.match(/^(.*)\/SceneServer\/layers\/([\d]*)\/?$/i);if(!r)return g.reject();null==e&&(e=r[1]+"/FeatureServer");var t=e.replace(/^(.*FeatureServer)(\/[\d]*\/?)?$/i,"$1"),o={query:{f:"json"},responseType:"json"},n=r[1]+"/SceneServer",i=parseInt(r[2],10),a=m(n,o).otherwise(function(e){return{layers:null}}),s=m(t,o);return R([s,a]).then(function(e){var r=e[0],o=e[1],n=o.data&&o.data.layers,a=r.data&&r.data.layers;if(!Array.isArray(a))throw new Error("expected layers array");if(Array.isArray(n))for(var s=0;s<Math.min(n.length,a.length);s++){var p=n[s];if(p.id===i)return t+"/"+a[s].id}else if(i<a.length)return t+"/"+a[i].id;throw new Error("could not find matching associated sublayer")})},i.prototype._buddyIsMoreImportant=function(e){if(!this.associatedLayer)return!1;var r=F.nameToId(this.originOf(e)),t=F.nameToId(this.associatedLayer.originOf(e));return null!=t&&t<=F.OriginId.SERVICE?null==r||r<F.OriginId.SERVICE:null!=t&&t<=F.OriginId.PORTAL_ITEM?null==r||r<F.OriginId.PORTAL_ITEM:!1},o([n.shared("esri.layers.SceneLayer")],i.prototype,"declaredClass",void 0),o([n.property({types:{key:"type",base:y.FeatureReduction,typeMap:{selection:y.FeatureReductionSelection}},json:{origins:{"web-scene":{read:{source:"layerDefinition.featureReduction"},write:{target:"layerDefinition.featureReduction"}}}}})],i.prototype,"featureReduction",void 0),o([n.property()],i.prototype,"associatedLayer",void 0),o([n.property()],i.prototype,"operationalLayerType",void 0),o([n.property({json:{read:!1},readOnly:!0})],i.prototype,"type",void 0),o([n.property({type:[s]})],i.prototype,"fields",void 0),o([n.property({readOnly:!0})],i.prototype,"attributeStorageInfo",void 0),o([n.property({readOnly:!0})],i.prototype,"statisticsInfo",void 0),o([n.property({type:String,json:{origins:{service:{read:!1,write:!1}},read:{source:"layerDefinition.definitionExpression"},write:{target:"layerDefinition.definitionExpression"}}})],i.prototype,"definitionExpression",void 0),o([n.property({type:u,json:{origins:{service:{read:{source:"elevationInfo"}}},read:{source:"layerDefinition.elevationInfo"},write:{target:"layerDefinition.elevationInfo"}}})],i.prototype,"elevationInfo",void 0),o([n.property({type:String,dependsOn:["profile"]})],i.prototype,"geometryType",null),o([n.property({type:Boolean})],i.prototype,"labelsVisible",void 0),o([n.reader("labelsVisible",["showLabels"])],i.prototype,"readLabelsVisible",null),o([n.writer("labelsVisible")],i.prototype,"writeLabelsVisible",null),o([n.property({type:[l],json:{origins:{service:{read:{source:"drawingInfo.labelingInfo",reader:d.reader},write:{target:"drawingInfo.labelingInfo",enabled:!1}}},read:{source:"layerDefinition.drawingInfo.labelingInfo",reader:d.reader},write:{target:"layerDefinition.drawingInfo.labelingInfo"}}})],i.prototype,"labelingInfo",void 0),o([n.property({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],i.prototype,"legendEnabled",void 0),o([n.property({types:_.types,json:{origins:{service:{read:{source:"drawingInfo.renderer",reader:O}}},read:{source:"layerDefinition.drawingInfo.renderer",reader:O},write:{target:"layerDefinition.drawingInfo.renderer"}},value:null})],i.prototype,"renderer",null),o([n.property({json:{read:!1}})],i.prototype,"cachedDrawingInfo",void 0),o([n.reader("service","cachedDrawingInfo")],i.prototype,"readCachedDrawingInfo",null),o([n.property({type:Boolean})],i.prototype,"popupEnabled",void 0),o([n.reader("popupEnabled",["disablePopup"])],i.prototype,"readPopupEnabled",null),o([n.writer("popupEnabled")],i.prototype,"writePopupEnabled",null),o([n.property({type:h,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],i.prototype,"popupTemplate",void 0),o([n.property({type:String,json:{read:!1}})],i.prototype,"objectIdField",void 0),o([n.reader("service","objectIdField",["objectIdField","fields"])],i.prototype,"readObjectIdField",null),o([n.property()],i.prototype,"objectIdFilter",void 0),o([n.property({type:String,json:{read:!1}})],i.prototype,"profile",void 0),o([n.reader("service","profile",["store.profile"])],i.prototype,"readProfile",null),o([n.property({readOnly:!0,type:String,json:{read:!1}})],i.prototype,"normalReferenceFrame",void 0),o([n.reader("service","normalReferenceFrame",["store.normalReferenceFrame"])],i.prototype,"readNormalReferenceFrame",null),o([n.property(f.screenSizePerspectiveEnabled)],i.prototype,"screenSizePerspectiveEnabled",void 0),i=o([n.subclass()],i)}(n.declared(i,c)),x={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},q={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};return D});