// COPYRIGHT Â© 2018 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.6/esri/copyright.txt for details.

//  copyright

/**
             * Copyright information for the WMS service.
             * This defaults to the value of the AccessConstraints property from the GetCapabilities request.
             *
             * @name copyright
             * @type {string}
             * @instance
             */

define(["require","exports","../core/tsSupport/declareExtendsHelper","../core/tsSupport/decorateHelper","dojo/_base/lang","../Graphic","../PopupTemplate","../request","../core/Collection","../core/CollectionFlattener","../core/Handles","../core/promiseUtils","../core/accessorSupport/decorators","../core/accessorSupport/write","../geometry/Extent","../geometry/SpatialReference","./Layer","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./support/ExportWMSImageParameters","./support/WMSSublayer","./support/wmsUtils"],function(e,r,t,a,o,n,i,s,p,l,u,y,m,c,d,f,g,h,v,x,w,b,S,I){function E(e,r){return e.some(function(e){for(var t in e)if(c.willPropertyWrite(e,t,null,r))return!0;return!1})}function R(e,r,t){var a=[],o=new Map;return e.forEach(function(e){var n=new S;if(n.read(e,r),t&&-1===t.indexOf(n.name)&&(n.visible=!1),o[n.id]=n,null!=e.parentLayerId&&-1!==e.parentLayerId){var i=o[e.parentLayerId];i.sublayers||(i.sublayers=[]),i.sublayers.unshift(n)}else a.unshift(n)}),a}return function(r){function c(e,t){var a=r.call(this)||this;return a._sublayersHandles=new u,a.allSublayers=new l({root:a,rootCollectionNames:["sublayers"],getChildrenFunction:function(e){return e.sublayers}}),a.customParameters=null,a.customLayerParameters=null,a.copyright=null,a.description=null,a.fullExtent=null,a.fullExtents=null,a.featureInfoFormat=null,a.featureInfoUrl=null,a.imageFormat=null,a.imageMaxHeight=2048,a.imageMaxWidth=2048,a.imageTransparency=!0,a.legendEnabled=!0,a.mapUrl=null,a.operationalLayerType="WMS",a.spatialReference=null,a.spatialReferences=null,a.sublayers=null,a.type="wms",a.version=null,a.watch("sublayers",function(e,r){r&&(r.forEach(function(e){e.layer=null}),a._sublayersHandles.removeAll(),a._sublayersHandles=null),e&&(e.forEach(function(e){e.parent=a,e.layer=a}),a._sublayersHandles||(a._sublayersHandles=new u),a._sublayersHandles.add([e.on("after-add",function(e){var r=e.item;r.parent=a,r.layer=a}),e.on("after-remove",function(e){var r=e.item;r.parent=null,r.layer=null})]))},!0),a}return t(c,r),c.prototype.normalizeCtorArgs=function(e,r){return"string"==typeof e?o.mixin({url:e},r):e},c.prototype.load=function(){var e=this;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WMS"]}).then(function(){return e._fetchService()})),this.when()},c.prototype.readFullExtentFromItemOrMap=function(e,r,t){var a=r.extent,o=r.spatialReferences;return new d(o&&o.length>0?{xmin:a[0][0],ymin:a[0][1],xmax:a[1][0],ymax:a[1][1],spatialReference:o[0]}:{xmin:a[0][0],ymin:a[0][1],xmax:a[1][0],ymax:a[1][1]})},c.prototype.writeFullExtent=function(e,r,t,a){r.extent=[[e.xmin,e.ymin],[e.xmax,e.ymax]]},c.prototype.readImageFormat=function(e,r){var t=r.supportedImageFormatTypes;return t&&t.indexOf("image/png")>-1?"image/png":t&&t[0]},c.prototype.readSpatialReferenceFromItemOrDocument=function(e,r,t){return new f(r.spatialReferences[0])},c.prototype.writeSpatialReferences=function(e,r,t,a){var o=this.spatialReference&&this.spatialReference.wkid;e&&o?(r.spatialReferences=e.filter(function(e){return e!==o}),r.spatialReferences.unshift(o)):r.spatialReferences=e},c.prototype.readSublayersFromItemOrMap=function(e,r,t){return R(r.layers,t,r.visibleLayers)},c.prototype.readSublayers=function(e,r,t){return R(r.layers,t)},c.prototype.writeSublayers=function(e,r,t,a){r.layers=[];var n=new Map,i=e.flatten(function(e){var r=e.sublayers;return r&&r.toArray()}).toArray();i.forEach(function(e){"number"==typeof e.parent.id&&(n.has(e.parent.id)?n.get(e.parent.id).push(e.id):n.set(e.parent.id,[e.id]))}),i.forEach(function(e){var t=o.mixin({sublayer:e},a),i=e.write({parentLayerId:"number"==typeof e.parent.id?e.parent.id:-1},t);if(n.has(e.id)&&(i.sublayerIds=n.get(e.id)),!e.sublayers&&e.name){var s=e.write({},t);delete s.id,r.layers.push(s)}}),r.visibleLayers=i.filter(function(e){return e.visible&&!e.sublayers}).map(function(e){return e.name})},c.prototype.createExportImageParameters=function(e){return this._exportWMSImageParameters=new b({layer:this,extent:e}),this._exportWMSImageParameters.toJSON()},c.prototype.fetchImage=function(e,r,t,a){var n=this.parsedUrl.path,i={responseType:"image",allowImageDataAccess:a&&a.allowImageDataAccess||!1,query:this._mixCustomParameters(o.mixin({width:r,height:t},this.createExportImageParameters(e)))};return a&&a.timestamp&&(i.query=o.mixin({_ts:a.timestamp},i.query)),s(n,i).then(function(e){return e.data})},c.prototype.fetchFeatureInfo=function(e,r,t,a,p){var l=this,u=I.getPopupLayers(this._exportWMSImageParameters.visibleSublayers);if(!this.featureInfoUrl||!u)return null;var y="1.3.0"===this.version?{I:a,J:p}:{x:a,y:p},m=o.mixin({query_layers:u,request:"GetFeatureInfo",info_format:this.featureInfoFormat,feature_count:25,width:r,height:t},y),c=o.mixin(this.createExportImageParameters(e),m);return c=this._mixCustomParameters(c),s(this.featureInfoUrl,{query:c,responseType:"text/html"}).then(function(e){var r=l.featureInfoUrl;r+=-1===r.indexOf("?")?"?":"";for(var t in c)r+="?"===r.substring(r.length-1,r.length)?"":"&",r+=t+"="+c[t];return new n({sourceLayer:l,popupTemplate:new i({title:l.title,content:'<iframe src="'+r+'" frameborder="0" marginwidth="0" marginheight="0">'+e.data+"<frame>"})})})},c.prototype.findSublayerById=function(e){return this.allSublayers.find(function(r){return r.id===e})},c.prototype.importLayerViewModule=function(r){switch(r.type){case"2d":return y.create(function(r){return e(["../views/2d/layers/WMSLayerView2D"],r)});case"3d":return y.create(function(r){return e(["../views/3d/layers/WMSLayerView3D"],r)})}},c.prototype._fetchService=function(){var e=this;return y.resolve().then(function(){return e.resourceInfo?{ssl:!1,data:e.resourceInfo}:(e.parsedUrl.query&&e.parsedUrl.query.service&&(e.parsedUrl.query.SERVICE=e.parsedUrl.query.service,delete e.parsedUrl.query),e.parsedUrl.query&&e.parsedUrl.query.request&&(e.parsedUrl.query.REQUEST=e.parsedUrl.query.service,delete e.parsedUrl.query.request),s(e.parsedUrl.path,{query:o.mixin({SERVICE:"WMS",REQUEST:"GetCapabilities"},e.parsedUrl.query,e.customParameters),responseType:"xml"}))}).then(function(r){r.ssl&&(e.url=e.url.replace(/^http:/i,"https:")),e.resourceInfo||(r.data=I.parseCapabilities(r.data,e.url)),r.data&&e.read(r.data,{origin:"service"})})},c.prototype._mixCustomParameters=function(e){if(!this.customLayerParameters&&!this.customParameters)return e;var r=o.mixin({},this.customParameters,this.customLayerParameters);for(var t in r)e[t.toLowerCase()]=r[t];return e},a([m.property({readOnly:!0})],c.prototype,"allSublayers",void 0),a([m.property({json:{write:!0}})],c.prototype,"customParameters",void 0),a([m.property({json:{write:!0}})],c.prototype,"customLayerParameters",void 0),a([m.property({type:String,json:{write:!0}})],c.prototype,"copyright",void 0),a([m.property()],c.prototype,"description",void 0),a([m.property({json:{origins:{service:{read:{source:"extent"}}}}})],c.prototype,"fullExtent",void 0),a([m.reader(["web-document","portal-item"],"fullExtent",["extent"])],c.prototype,"readFullExtentFromItemOrMap",null),a([m.writer(["web-document","portal-item"],"fullExtent")],c.prototype,"writeFullExtent",null),a([m.property()],c.prototype,"fullExtents",void 0),a([m.property({type:String,json:{write:{ignoreOrigin:!0}}})],c.prototype,"featureInfoFormat",void 0),a([m.property({type:String,json:{write:{ignoreOrigin:!0}}})],c.prototype,"featureInfoUrl",void 0),a([m.property({type:String,json:{origins:{"web-document":{read:{source:"format"},write:{target:"format"}}}}})],c.prototype,"imageFormat",void 0),a([m.reader("imageFormat",["supportedImageFormatTypes"])],c.prototype,"readImageFormat",null),a([m.property({type:Number,json:{read:{source:"maxHeight"},write:{target:"maxHeight"}}})],c.prototype,"imageMaxHeight",void 0),a([m.property({type:Number,json:{read:{source:"maxWidth"},write:{target:"maxWidth"}}})],c.prototype,"imageMaxWidth",void 0),a([m.property()],c.prototype,"imageTransparency",void 0),a([m.property({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],c.prototype,"legendEnabled",void 0),a([m.property({type:String,json:{write:{ignoreOrigin:!0}}})],c.prototype,"mapUrl",void 0),a([m.property()],c.prototype,"operationalLayerType",void 0),a([m.property({type:f,json:{origins:{service:{read:{source:"extent.spatialReference"}}},write:!1}})],c.prototype,"spatialReference",void 0),a([m.reader(["web-document","portal-item"],"spatialReference",["spatialReferences"])],c.prototype,"readSpatialReferenceFromItemOrDocument",null),a([m.property({type:[Number],json:{read:{source:"spatialReferences"},write:{ignoreOrigin:!0}}})],c.prototype,"spatialReferences",void 0),a([m.writer(["web-document","portal-item"],"spatialReferences")],c.prototype,"writeSpatialReferences",null),a([m.property({type:p.ofType(S),json:{write:{overridePolicy:function(e,r,t){if(E(this.allSublayers,t))return{ignoreOrigin:!0}}}}})],c.prototype,"sublayers",void 0),a([m.reader(["web-document","portal-item"],"sublayers",["layers","visibleLayers"])],c.prototype,"readSublayersFromItemOrMap",null),a([m.reader("service","sublayers",["layers"])],c.prototype,"readSublayers",null),a([m.writer("sublayers")],c.prototype,"writeSublayers",null),a([m.property({json:{read:!1},readOnly:!0,value:"wms"})],c.prototype,"type",void 0),a([m.property({type:String,json:{write:{ignoreOrigin:!0}}})],c.prototype,"version",void 0),c=a([m.subclass("esri.layers.WMSLayer")],c)}(m.declared(g,h,v,x,w))});