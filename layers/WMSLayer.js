// COPYRIGHT Â© 2017 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.6/esri/copyright.txt for details.

//  copyright

/**
             * Copyright information for the WMS service.
             * This defaults to the value of the AccessConstraints property from the GetCapabilities request.
             *
             * @name copyright
             * @type {string}
             * @instance
             */

define(["require","exports","../core/tsSupport/declareExtendsHelper","../core/tsSupport/decorateHelper","../core/accessorSupport/decorators","dojo/_base/lang","../core/Collection","../core/HandleRegistry","../core/promiseUtils","../core/CollectionFlattener","../core/accessorSupport/write","../geometry/Extent","../geometry/SpatialReference","../request","../Graphic","../PopupTemplate","./Layer","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./support/wmsUtils","./support/WMSSublayer","./support/ExportWMSImageParameters"],function(e,r,t,a,o,n,i,s,p,l,u,y,m,d,c,f,g,h,v,x,w,b,S,I){function E(e,r){return e.some(function(e){for(var t in e)if(u.willPropertyWrite(e,t,null,r))return!0;return!1})}function R(e,r,t){var a=[],o=new Map;return e.forEach(function(e){var n=new S;if(n.read(e,r),t&&-1===t.indexOf(n.name)&&(n.visible=!1),o[n.id]=n,null!=e.parentLayerId&&-1!==e.parentLayerId){var i=o[e.parentLayerId];i.sublayers||(i.sublayers=[]),i.sublayers.unshift(n)}else a.unshift(n)}),a}var P=function(e){function r(r,t){var a=e.call(this)||this;return a._sublayersHandles=new s,a.allSublayers=new l({root:a,rootCollectionNames:["sublayers"],getChildrenFunction:function(e){return e.sublayers}}),a.customParameters=null,a.customLayerParameters=null,a.copyright=null,a.description=null,a.fullExtent=null,a.fullExtents=null,a.featureInfoFormat=null,a.featureInfoUrl=null,a.imageFormat=null,a.imageMaxHeight=2048,a.imageMaxWidth=2048,a.imageTransparency=!0,a.legendEnabled=!0,a.mapUrl=null,a.operationalLayerType="WMS",a.spatialReference=null,a.spatialReferences=null,a.sublayers=null,a.type="wms",a.version=null,a.watch("sublayers",function(e,r){r&&(r.forEach(function(e){e.layer=null}),a._sublayersHandles.removeAll(),a._sublayersHandles=null),e&&(e.forEach(function(e){e.parent=a,e.layer=a}),a._sublayersHandles||(a._sublayersHandles=new s),a._sublayersHandles.add([e.on("after-add",function(e){var r=e.item;r.parent=a,r.layer=a}),e.on("after-remove",function(e){var r=e.item;r.parent=null,r.layer=null})]))},!0),a}return t(r,e),r.prototype.normalizeCtorArgs=function(e,r){return"string"==typeof e?n.mixin({url:e},r):e},r.prototype.load=function(){var e=this;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["WMS"]}).then(function(){return e._fetchService()})),this.when()},r.prototype.readFullExtentFromItemOrMap=function(e,r,t){var a=r.extent,o=r.spatialReferences;return new y(o&&o.length>0?{xmin:a[0][0],ymin:a[0][1],xmax:a[1][0],ymax:a[1][1],spatialReference:o[0]}:{xmin:a[0][0],ymin:a[0][1],xmax:a[1][0],ymax:a[1][1]})},r.prototype.writeFullExtent=function(e,r,t,a){r.extent=[[e.xmin,e.ymin],[e.xmax,e.ymax]]},r.prototype.readImageFormat=function(e,r){var t=r.supportedImageFormatTypes;return t&&t.indexOf("image/png")>-1?"image/png":t&&t[0]},r.prototype.readSpatialReferenceFromItemOrDocument=function(e,r,t){return new m(r.spatialReferences[0])},r.prototype.writeSpatialReferences=function(e,r,t,a){var o=this.spatialReference&&this.spatialReference.wkid;e&&o?(r.spatialReferences=e.filter(function(e){return e!==o}),r.spatialReferences.unshift(o)):r.spatialReferences=e},r.prototype.readSublayersFromItemOrMap=function(e,r,t){return R(r.layers,t,r.visibleLayers)},r.prototype.readSublayers=function(e,r,t){var a=R(r.layers,t);return a},r.prototype.writeSublayers=function(e,r,t,a){r.layers=[];var o=new Map,i=e.flatten(function(e){var r=e.sublayers;return r&&r.toArray()}).toArray();i.forEach(function(e){"number"==typeof e.parent.id&&(o.has(e.parent.id)?o.get(e.parent.id).push(e.id):o.set(e.parent.id,[e.id]))}),i.forEach(function(e){var t=n.mixin({sublayer:e},a),i=e.write({parentLayerId:"number"==typeof e.parent.id?e.parent.id:-1},t);if(o.has(e.id)&&(i.sublayerIds=o.get(e.id)),!e.sublayers&&e.name){var s=e.write({},t);delete s.id,r.layers.push(s)}}),r.visibleLayers=i.filter(function(e){return e.visible&&!e.sublayers}).map(function(e){return e.name})},r.prototype.createExportImageParameters=function(e){this._exportWMSImageParameters=new I({layer:this,extent:e});var r=this._exportWMSImageParameters.toJSON();return r},r.prototype.fetchImage=function(e,r,t,a){var o=this.parsedUrl.path,i={responseType:"image",allowImageDataAccess:a&&a.allowImageDataAccess||!1,query:this._mixCustomParameters(n.mixin({width:r,height:t},this.createExportImageParameters(e)))};return a&&a.timestamp&&(i.query=n.mixin({_ts:a.timestamp},i.query)),d(o,i).then(function(e){return e.data})},r.prototype.fetchFeatureInfo=function(e,r,t,a,o){var i=this,s=b.getPopupLayers(this._exportWMSImageParameters.visibleSublayers);if(!this.featureInfoUrl||!s)return null;var p="1.3.0"===this.version?{I:a,J:o}:{x:a,y:o},l=n.mixin({query_layers:s,request:"GetFeatureInfo",info_format:this.featureInfoFormat,feature_count:25,width:r,height:t},p),u=n.mixin(this.createExportImageParameters(e),l);return u=this._mixCustomParameters(u),d(this.featureInfoUrl,{query:u,responseType:"text/html"}).then(function(e){var r=i.featureInfoUrl;r+=-1===r.indexOf("?")?"?":"";for(var t in u)r+="?"===r.substring(r.length-1,r.length)?"":"&",r+=t+"="+u[t];return new c({popupTemplate:new f({title:i.title,content:'<iframe src="'+r+'" frameborder="0" marginwidth="0" marginheight="0">'+e.data+"<frame>"})})})},r.prototype.findSublayerById=function(e){return this.allSublayers.find(function(r){return r.id===e})},r.prototype._fetchService=function(){var e=this;return p.resolve().then(function(){return e.resourceInfo?{ssl:!1,data:e.resourceInfo}:(e.parsedUrl.query&&e.parsedUrl.query.service&&(e.parsedUrl.query.SERVICE=e.parsedUrl.query.service,delete e.parsedUrl.query),e.parsedUrl.query&&e.parsedUrl.query.request&&(e.parsedUrl.query.REQUEST=e.parsedUrl.query.service,delete e.parsedUrl.query.request),d(e.parsedUrl.path,{query:n.mixin({SERVICE:"WMS",REQUEST:"GetCapabilities"},e.parsedUrl.query,e.customParameters),responseType:"xml"}))}).then(function(r){r.ssl&&(e.url=e.url.replace(/^http:/i,"https:")),e.resourceInfo||(r.data=b.parseCapabilities(r.data)),r.data&&e.read(r.data,{origin:"service"})})},r.prototype._mixCustomParameters=function(e){if(!this.customLayerParameters&&!this.customParameters)return e;var r=n.mixin({},this.customParameters,this.customLayerParameters);for(var t in r)e[t.toLowerCase()]=r[t];return e},a([o.shared({"2d":"../views/2d/layers/WMSLayerView2D","3d":"../views/3d/layers/WMSLayerView3D"})],r.prototype,"viewModulePaths",void 0),a([o.property({readOnly:!0})],r.prototype,"allSublayers",void 0),a([o.property({json:{write:!0}})],r.prototype,"customParameters",void 0),a([o.property({json:{write:!0}})],r.prototype,"customLayerParameters",void 0),a([o.property({type:String,json:{write:!0}})],r.prototype,"copyright",void 0),a([o.property()],r.prototype,"description",void 0),a([o.property({json:{origins:{service:{read:{source:"extent"}}}}})],r.prototype,"fullExtent",void 0),a([o.reader(["web-document","portal-item"],"fullExtent",["extent"])],r.prototype,"readFullExtentFromItemOrMap",null),a([o.writer(["web-document","portal-item"],"fullExtent")],r.prototype,"writeFullExtent",null),a([o.property()],r.prototype,"fullExtents",void 0),a([o.property({type:String,json:{write:{ignoreOrigin:!0}}})],r.prototype,"featureInfoFormat",void 0),a([o.property({type:String,json:{write:{ignoreOrigin:!0}}})],r.prototype,"featureInfoUrl",void 0),a([o.property({type:String,json:{origins:{"web-document":{read:{source:"format"},write:{target:"format"}}}}})],r.prototype,"imageFormat",void 0),a([o.reader("imageFormat",["supportedImageFormatTypes"])],r.prototype,"readImageFormat",null),a([o.property({type:Number,json:{read:{source:"maxHeight"},write:{target:"maxHeight"}}})],r.prototype,"imageMaxHeight",void 0),a([o.property({type:Number,json:{read:{source:"maxWidth"},write:{target:"maxWidth"}}})],r.prototype,"imageMaxWidth",void 0),a([o.property()],r.prototype,"imageTransparency",void 0),a([o.property({type:Boolean,json:{origins:{service:{read:{enabled:!1}}},read:{source:"showLegend"},write:{target:"showLegend"}}})],r.prototype,"legendEnabled",void 0),a([o.property({type:String,json:{write:{ignoreOrigin:!0}}})],r.prototype,"mapUrl",void 0),a([o.property()],r.prototype,"operationalLayerType",void 0),a([o.property({type:m,json:{origins:{service:{read:{source:"extent.spatialReference"}}},write:!1}})],r.prototype,"spatialReference",void 0),a([o.reader(["web-document","portal-item"],"spatialReference",["spatialReferences"])],r.prototype,"readSpatialReferenceFromItemOrDocument",null),a([o.property({type:[Number],json:{read:{source:"spatialReferences"},write:{ignoreOrigin:!0}}})],r.prototype,"spatialReferences",void 0),a([o.writer(["web-document","portal-item"],"spatialReferences")],r.prototype,"writeSpatialReferences",null),a([o.property({type:i.ofType(S),json:{write:{overridePolicy:function(e,r,t){return E(this.allSublayers,t)?{ignoreOrigin:!0}:void 0}}}})],r.prototype,"sublayers",void 0),a([o.reader(["web-document","portal-item"],"sublayers",["layers","visibleLayers"])],r.prototype,"readSublayersFromItemOrMap",null),a([o.reader("service","sublayers",["layers"])],r.prototype,"readSublayers",null),a([o.writer("sublayers")],r.prototype,"writeSublayers",null),a([o.property({json:{read:!1},readOnly:!0,value:"wms"})],r.prototype,"type",void 0),a([o.property({type:String,json:{write:{ignoreOrigin:!0}}})],r.prototype,"version",void 0),r=a([o.subclass("esri.layers.WMSLayer")],r)}(o.declared(g,h,v,x,w));return P});