// COPYRIGHT Â© 2017 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.6/esri/copyright.txt for details.

define(["require","exports","../../core/tsSupport/declareExtendsHelper","../../core/tsSupport/decorateHelper","../../core/accessorSupport/decorators","../../core/Accessor","../../core/HandleRegistry","../../core/Logger","../../core/promiseUtils","../../core/watchUtils"],function(e,t,o,i,n,r,a,d,p,s){var c="esri.widgets.CompassViewModel",h=d.getLogger(c),u=function(e){function t(t){var o=e.call(this,t)||this;return o._handles=new a,o.canUseHeading=!1,o.orientation={x:0,y:0,z:0},o.view=null,o._updateForCamera=o._updateForCamera.bind(o),o._updateForRotation=o._updateForRotation.bind(o),o._updateRotationWatcher=o._updateRotationWatcher.bind(o),o._updateViewHeading=o._updateViewHeading.bind(o),o._checkHeadingSupport=o._checkHeadingSupport.bind(o),o._canUseHeading(),o}return o(t,e),t.prototype.initialize=function(){this._handles.add(s.init(this,"view",this._updateRotationWatcher))},t.prototype.destroy=function(){this._removeCheckHeadingListener(),this._removeOrientationListener(),this._handles.destroy(),this._handles=null,this.view=null},Object.defineProperty(t.prototype,"activeMode",{get:function(){var e=this._get("activeMode");if(e)return e;var t=this.modes;return t?t[0]:"none"},set:function(e){this.stopMode(),this._set("activeMode",e),void 0===e&&this._clearOverride("activeMode")},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"canShowNorth",{get:function(){var e=this.get("view.spatialReference");return e&&(e.isWebMercator||e.isWGS84)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"modes",{get:function(){return this._get("modes")||["reset"]},set:function(e){this._set("modes",e),void 0===e&&this._clearOverride("modes")},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"state",{get:function(){return this.get("view.ready")?this.canShowNorth?"compass":"rotation":"disabled"},enumerable:!0,configurable:!0}),t.prototype.previousMode=function(){var e=this,t=e.activeMode,o=e.modes;if(!(o.length<2)){var i=o.indexOf(t),n=i-1;this._paginateMode(n)}},t.prototype.nextMode=function(){var e=this,t=e.activeMode,o=e.modes;if(!(o.length<2)){var i=o.indexOf(t),n=i+1;this._paginateMode(n)}},t.prototype.startMode=function(){var e=this.activeMode;"reset"===e&&this.reset(),"device-orientation"===e&&(this._removeOrientationListener(),this._addOrientationListener())},t.prototype.stopMode=function(){var e=this.activeMode;"device-orientation"===e&&this._removeOrientationListener()},t.prototype.reset=function(){if(this.get("view.ready")){var e={};"2d"===this.view.type?e.rotation=0:e.heading=0;var t=this.view;t.goTo(e)}},t.prototype._supportsDeviceOrientation=function(){return"DeviceOrientationEvent"in window},t.prototype._paginateMode=function(e){var t=this.modes,o=(e+t.length)%t.length;this.activeMode=t[o]},t.prototype._getHeading=function(e){return e.webkitCompassHeading},t.prototype._removeCheckHeadingListener=function(){this._supportsDeviceOrientation()&&window.removeEventListener("deviceorientation",this._checkHeadingSupport)},t.prototype._checkHeadingSupport=function(e){var t=this._getHeading(e);"number"==typeof t&&this._set("canUseHeading",!0),this._removeCheckHeadingListener()},t.prototype._canUseHeading=function(){var e=this;this._supportsDeviceOrientation()&&(window.addEventListener("deviceorientation",this._checkHeadingSupport),p.after(500).then(function(){e._removeCheckHeadingListener()}))},t.prototype._updateViewHeading=function(e){var t=this.view,o=this._getHeading(e);"number"!=typeof o||0>o||o>360||!t||("3d"===t.type&&t.goTo({heading:o}),"2d"===t.type&&(t.rotation=o))},t.prototype._removeOrientationListener=function(){var e=this.canUseHeading;e&&window.removeEventListener("deviceorientation",this._updateViewHeading)},t.prototype._addOrientationListener=function(){var e=this,t=e.canShowNorth,o=e.canUseHeading;return o?t?void window.addEventListener("deviceorientation",this._updateViewHeading):void h.warn("device-orientation mode requires 'canShowNorth' to be true"):void h.warn("The deviceorientation event is not supported in this browser")},t.prototype._updateForRotation=function(e){void 0!==e&&null!==e&&(this.orientation={z:e})},t.prototype._updateForCamera=function(e){if(e){var t=-e.heading;this.orientation={x:0,y:0,z:t}}},t.prototype._updateRotationWatcher=function(e){this._handles.removeAll(),e&&("2d"===e.type?this._handles.add(s.init(this,"view.rotation",this._updateForRotation)):this._handles.add(s.init(this,"view.camera",this._updateForCamera)))},i([n.property({dependsOn:["modes"]})],t.prototype,"activeMode",null),i([n.property({dependsOn:["view.spatialReference.isWebMercator","view.spatialReference.wkid"],readOnly:!0})],t.prototype,"canShowNorth",null),i([n.property({readOnly:!0})],t.prototype,"canUseHeading",void 0),i([n.property({dependsOn:["canUseHeading"]})],t.prototype,"modes",null),i([n.property()],t.prototype,"orientation",void 0),i([n.property({dependsOn:["view.ready","canShowNorth"],readOnly:!0})],t.prototype,"state",null),i([n.property()],t.prototype,"view",void 0),i([n.property()],t.prototype,"previousMode",null),i([n.property()],t.prototype,"nextMode",null),i([n.property()],t.prototype,"startMode",null),i([n.property()],t.prototype,"stopMode",null),i([n.property()],t.prototype,"reset",null),t=i([n.subclass(c)],t)}(n.declared(r));return u});